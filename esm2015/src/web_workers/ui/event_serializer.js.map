{"version":3,"file":"event_serializer.js","sourceRoot":"","sources":["../../../../../../packages/platform-webworker/src/web_workers/ui/event_serializer.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,uBAAM,sBAAsB,GAAG;IAC7B,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS;IACxF,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU;CACtD,CAAC;AAEF,uBAAM,yBAAyB,GAAG;IAChC,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS;IAC/F,QAAQ,EAAE,UAAU,EAAE,OAAO;CAC9B,CAAC;AAEF,uBAAM,2BAA2B,GAAG,CAAC,cAAc,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;AAErF,uBAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;AAE3D,uBAAM,gBAAgB,GAAG,IAAI,GAAG,CAC5B,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;;;;;AAE7F,MAAM,gCAAgC,CAAQ;IAC5C,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;CAC5C;;;;;AAID,MAAM,mCAAmC,CAAQ;IAC/C,uBAAM,eAAe,GAAG,cAAc,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAC5D,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;CACtC;;;;;AAED,MAAM,8BAA8B,CAAa;IAC/C,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC;CAClD;;;;;AAED,MAAM,iCAAiC,CAAgB;IACrD,uBAAM,eAAe,GAAG,cAAc,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC;IACrE,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;CACtC;;;;;AAED,MAAM,mCAAmC,CAAkB;IACzD,uBAAM,eAAe,GAAG,cAAc,CAAC,CAAC,EAAE,2BAA2B,CAAC,CAAC;IACvE,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;CACtC;;;;;;AAGD,mBAAmB,CAAQ,EAAE,eAAqC;IAChE,EAAE,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,mBAAc,CAAC,CAAC,MAAM,EAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACxE,uBAAM,MAAM,qBAAqB,CAAC,CAAC,MAAM,CAAA,CAAC;QAC1C,eAAe,CAAC,QAAQ,CAAC,GAAG,EAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC;QACpD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,eAAe,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;SACnD;KACF;IACD,MAAM,CAAC,eAAe,CAAC;CACxB;;;;;;AAED,wBAAwB,CAAM,EAAE,UAAoB;IAClD,uBAAM,UAAU,GAAuB,EAAE,CAAC;IAC1C,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,uBAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3B,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;KAC5B;IACD,MAAM,CAAC,UAAU,CAAC;CACnB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst MOUSE_EVENT_PROPERTIES = [\n  'altKey', 'button', 'clientX', 'clientY', 'metaKey', 'movementX', 'movementY', 'offsetX',\n  'offsetY', 'region', 'screenX', 'screenY', 'shiftKey'\n];\n\nconst KEYBOARD_EVENT_PROPERTIES = [\n  'altkey', 'charCode', 'code', 'ctrlKey', 'isComposing', 'key', 'keyCode', 'location', 'metaKey',\n  'repeat', 'shiftKey', 'which'\n];\n\nconst TRANSITION_EVENT_PROPERTIES = ['propertyName', 'elapsedTime', 'pseudoElement'];\n\nconst EVENT_PROPERTIES = ['type', 'bubbles', 'cancelable'];\n\nconst NODES_WITH_VALUE = new Set(\n    ['input', 'select', 'option', 'button', 'li', 'meter', 'progress', 'param', 'textarea']);\n\nexport function serializeGenericEvent(e: Event): {[key: string]: any} {\n  return serializeEvent(e, EVENT_PROPERTIES);\n}\n\n// TODO(jteplitz602): Allow users to specify the properties they need rather than always\n// adding value and files #3374\nexport function serializeEventWithTarget(e: Event): {[key: string]: any} {\n  const serializedEvent = serializeEvent(e, EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n\nexport function serializeMouseEvent(e: MouseEvent): {[key: string]: any} {\n  return serializeEvent(e, MOUSE_EVENT_PROPERTIES);\n}\n\nexport function serializeKeyboardEvent(e: KeyboardEvent): {[key: string]: any} {\n  const serializedEvent = serializeEvent(e, KEYBOARD_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n\nexport function serializeTransitionEvent(e: TransitionEvent): {[key: string]: any} {\n  const serializedEvent = serializeEvent(e, TRANSITION_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n\n// TODO(jteplitz602): #3374. See above.\nfunction addTarget(e: Event, serializedEvent: {[key: string]: any}): {[key: string]: any} {\n  if (NODES_WITH_VALUE.has((<HTMLElement>e.target).tagName.toLowerCase())) {\n    const target = <HTMLInputElement>e.target;\n    serializedEvent['target'] = {'value': target.value};\n    if (target.files) {\n      serializedEvent['target']['files'] = target.files;\n    }\n  }\n  return serializedEvent;\n}\n\nfunction serializeEvent(e: any, properties: string[]): {[key: string]: any} {\n  const serialized: {[k: string]: any} = {};\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    serialized[prop] = e[prop];\n  }\n  return serialized;\n}\n"]}