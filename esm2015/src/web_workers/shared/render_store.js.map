{"version":3,"file":"render_store.js","sourceRoot":"","sources":["../../../../../../packages/platform-webworker/src/web_workers/shared/render_store.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AAGzC,MAAM;;0BACiB,CAAC;2BACA,IAAI,GAAG,EAAe;+BAClB,IAAI,GAAG,EAAe;;;;;IAEhD,UAAU,KAAa,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;;;;;;IAElD,KAAK,CAAC,GAAQ,EAAE,EAAU;QACxB,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;KACnC;;;;;IAED,MAAM,CAAC,GAAQ;QACb,uBAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAChC;KACF;;;;;IAED,WAAW,CAAC,EAAU;QACpB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KACnE;;;;;IAED,SAAS,CAAC,GAAQ;QAChB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3D;;;YA5BF,UAAU","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class RenderStore {\n  private _nextIndex = 0;\n  private _lookupById = new Map<number, any>();\n  private _lookupByObject = new Map<any, number>();\n\n  allocateId(): number { return this._nextIndex++; }\n\n  store(obj: any, id: number): void {\n    if (id == null) return;\n    this._lookupById.set(id, obj);\n    this._lookupByObject.set(obj, id);\n  }\n\n  remove(obj: any): void {\n    const index = this._lookupByObject.get(obj);\n    if (index != null) {\n      this._lookupByObject.delete(obj);\n      this._lookupById.delete(index);\n    }\n  }\n\n  deserialize(id: number): any {\n    return this._lookupById.has(id) ? this._lookupById.get(id) : null;\n  }\n\n  serialize(obj: any): number|null|undefined {\n    return obj == null ? null : this._lookupByObject.get(obj);\n  }\n}\n"]}