/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { WORKER_SCRIPT, platformWorkerUi } from './worker_render';
export { VERSION } from './version';
export { ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments } from './web_workers/shared/client_message_broker';
export { MessageBus } from './web_workers/shared/message_bus';
export { ServiceMessageBroker, ServiceMessageBrokerFactory } from './web_workers/shared/service_message_broker';
export { WORKER_UI_LOCATION_PROVIDERS } from './web_workers/ui/location_providers';
export { WORKER_APP_LOCATION_PROVIDERS } from './web_workers/worker/location_providers';
export { WorkerAppModule, platformWorkerApp } from './worker_app';
export { platformWorkerUi } from './worker_render';
/**
 * Bootstraps the worker ui.
 *
 * \@experimental
 * @param {?} workerScriptUri
 * @param {?=} customProviders
 * @return {?}
 */
export function bootstrapWorkerUi(workerScriptUri, customProviders = []) {
    // For now, just creates the worker ui platform...
    const /** @type {?} */ platform = platformWorkerUi([
        { provide: WORKER_SCRIPT, useValue: workerScriptUri },
        ...customProviders,
    ]);
    return Promise.resolve(platform);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0td2Vid29ya2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvcGxhdGZvcm0td2Vid29ya2VyL3NyYy9wbGF0Zm9ybS13ZWJ3b3JrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFVQSxPQUFPLEVBQUMsYUFBYSxFQUFFLGdCQUFnQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFaEUsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNsQyxPQUFPLEVBQUMsbUJBQW1CLEVBQUUsMEJBQTBCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBQyxNQUFNLDRDQUE0QyxDQUFDO0FBQy9ILE9BQU8sRUFBQyxVQUFVLEVBQW1DLE1BQU0sa0NBQWtDLENBQUM7QUFFOUYsT0FBTyxFQUFrQixvQkFBb0IsRUFBRSwyQkFBMkIsRUFBQyxNQUFNLDZDQUE2QyxDQUFDO0FBQy9ILE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ2pGLE9BQU8sRUFBQyw2QkFBNkIsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBQ3RGLE9BQU8sRUFBQyxlQUFlLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDaEUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7OztBQU9qRCxNQUFNLDRCQUNGLGVBQXVCLEVBQUUsa0JBQW9DLEVBQUU7O0lBRWpFLHVCQUFNLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQztRQUNoQyxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBQztRQUNuRCxHQUFHLGVBQWU7S0FDbkIsQ0FBQyxDQUFDO0lBRUgsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0NBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge1BsYXRmb3JtUmVmLCBTdGF0aWNQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7V09SS0VSX1NDUklQVCwgcGxhdGZvcm1Xb3JrZXJVaX0gZnJvbSAnLi93b3JrZXJfcmVuZGVyJztcblxuZXhwb3J0IHtWRVJTSU9OfSBmcm9tICcuL3ZlcnNpb24nO1xuZXhwb3J0IHtDbGllbnRNZXNzYWdlQnJva2VyLCBDbGllbnRNZXNzYWdlQnJva2VyRmFjdG9yeSwgRm5BcmcsIFVpQXJndW1lbnRzfSBmcm9tICcuL3dlYl93b3JrZXJzL3NoYXJlZC9jbGllbnRfbWVzc2FnZV9icm9rZXInO1xuZXhwb3J0IHtNZXNzYWdlQnVzLCBNZXNzYWdlQnVzU2luaywgTWVzc2FnZUJ1c1NvdXJjZX0gZnJvbSAnLi93ZWJfd29ya2Vycy9zaGFyZWQvbWVzc2FnZV9idXMnO1xuZXhwb3J0IHtTZXJpYWxpemVyVHlwZXN9IGZyb20gJy4vd2ViX3dvcmtlcnMvc2hhcmVkL3NlcmlhbGl6ZXInO1xuZXhwb3J0IHtSZWNlaXZlZE1lc3NhZ2UsIFNlcnZpY2VNZXNzYWdlQnJva2VyLCBTZXJ2aWNlTWVzc2FnZUJyb2tlckZhY3Rvcnl9IGZyb20gJy4vd2ViX3dvcmtlcnMvc2hhcmVkL3NlcnZpY2VfbWVzc2FnZV9icm9rZXInO1xuZXhwb3J0IHtXT1JLRVJfVUlfTE9DQVRJT05fUFJPVklERVJTfSBmcm9tICcuL3dlYl93b3JrZXJzL3VpL2xvY2F0aW9uX3Byb3ZpZGVycyc7XG5leHBvcnQge1dPUktFUl9BUFBfTE9DQVRJT05fUFJPVklERVJTfSBmcm9tICcuL3dlYl93b3JrZXJzL3dvcmtlci9sb2NhdGlvbl9wcm92aWRlcnMnO1xuZXhwb3J0IHtXb3JrZXJBcHBNb2R1bGUsIHBsYXRmb3JtV29ya2VyQXBwfSBmcm9tICcuL3dvcmtlcl9hcHAnO1xuZXhwb3J0IHtwbGF0Zm9ybVdvcmtlclVpfSBmcm9tICcuL3dvcmtlcl9yZW5kZXInO1xuXG4vKipcbiAqIEJvb3RzdHJhcHMgdGhlIHdvcmtlciB1aS5cbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBib290c3RyYXBXb3JrZXJVaShcbiAgICB3b3JrZXJTY3JpcHRVcmk6IHN0cmluZywgY3VzdG9tUHJvdmlkZXJzOiBTdGF0aWNQcm92aWRlcltdID0gW10pOiBQcm9taXNlPFBsYXRmb3JtUmVmPiB7XG4gIC8vIEZvciBub3csIGp1c3QgY3JlYXRlcyB0aGUgd29ya2VyIHVpIHBsYXRmb3JtLi4uXG4gIGNvbnN0IHBsYXRmb3JtID0gcGxhdGZvcm1Xb3JrZXJVaShbXG4gICAge3Byb3ZpZGU6IFdPUktFUl9TQ1JJUFQsIHVzZVZhbHVlOiB3b3JrZXJTY3JpcHRVcml9LFxuICAgIC4uLmN1c3RvbVByb3ZpZGVycyxcbiAgXSk7XG5cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShwbGF0Zm9ybSk7XG59XG4iXX0=