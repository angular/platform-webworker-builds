{"version":3,"file":"platform-webworker.umd.js","sources":["../../../../packages/platform-webworker/public_api.ts","../../../../packages/platform-webworker/src/platform-webworker.ts","../../../../packages/platform-webworker/src/worker_app.ts","../../../../packages/platform-webworker/src/web_workers/worker/worker_adapter.ts","../../../../packages/platform-webworker/src/web_workers/worker/renderer.ts","../../../../packages/platform-webworker/src/web_workers/worker/location_providers.ts","../../../../packages/platform-webworker/src/web_workers/worker/platform_location.ts","../../../../packages/platform-webworker/src/web_workers/ui/location_providers.ts","../../../../packages/platform-webworker/src/web_workers/ui/platform_location.ts","../../../../packages/platform-webworker/src/version.ts","../../../../packages/platform-webworker/src/worker_render.ts","../../../../packages/platform-webworker/src/web_workers/ui/renderer.ts","../../../../packages/platform-webworker/src/web_workers/ui/event_dispatcher.ts","../../../../packages/platform-webworker/src/web_workers/ui/event_serializer.ts","../../../../packages/platform-webworker/src/web_workers/shared/service_message_broker.ts","../../../../packages/platform-webworker/src/web_workers/shared/post_message_bus.ts","../../../../packages/platform-webworker/src/web_workers/shared/client_message_broker.ts","../../../../packages/platform-webworker/src/web_workers/shared/serializer.ts","../../../../packages/platform-webworker/src/web_workers/shared/render_store.ts","../../../../packages/platform-webworker/src/web_workers/shared/message_bus.ts","../../../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\nexport {VERSION,ClientMessageBroker,ClientMessageBrokerFactory,FnArg,UiArguments,MessageBus,MessageBusSink,MessageBusSource,SerializerTypes,ReceivedMessage,ServiceMessageBroker,ServiceMessageBrokerFactory,WORKER_UI_LOCATION_PROVIDERS,WORKER_APP_LOCATION_PROVIDERS,WorkerAppModule,platformWorkerApp,platformWorkerUi,bootstrapWorkerUi} from './src/platform-webworker';\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, StaticProvider} from '@angular/core';\n\nimport {WORKER_SCRIPT, platformWorkerUi} from './worker_render';\n\nexport {VERSION} from './version';\nexport {ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments} from './web_workers/shared/client_message_broker';\nexport {MessageBus, MessageBusSink, MessageBusSource} from './web_workers/shared/message_bus';\nexport {SerializerTypes} from './web_workers/shared/serializer';\nexport {ReceivedMessage, ServiceMessageBroker, ServiceMessageBrokerFactory} from './web_workers/shared/service_message_broker';\nexport {WORKER_UI_LOCATION_PROVIDERS} from './web_workers/ui/location_providers';\nexport {WORKER_APP_LOCATION_PROVIDERS} from './web_workers/worker/location_providers';\nexport {WorkerAppModule, platformWorkerApp} from './worker_app';\nexport {platformWorkerUi} from './worker_render';\n/**\n * Bootstraps the worker ui.\n * \n * \\@experimental\n * @param {?} workerScriptUri\n * @param {?=} customProviders\n * @return {?}\n */\nexport function bootstrapWorkerUi(\n    workerScriptUri: string, customProviders: StaticProvider[] = []): Promise<PlatformRef> {\n  // For now, just creates the worker ui platform...\n  const /** @type {?} */ platform = platformWorkerUi([\n    {provide: WORKER_SCRIPT, useValue: workerScriptUri},\n    ...customProviders,\n  ]);\n\n  return Promise.resolve(platform);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, ɵPLATFORM_WORKER_APP_ID as PLATFORM_WORKER_APP_ID} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationModule, ErrorHandler, NgModule, NgZone, PLATFORM_ID, PlatformRef, RendererFactory2, RootRenderer, StaticProvider, createPlatformFactory, platformCore} from '@angular/core';\nimport {DOCUMENT, ɵBROWSER_SANITIZATION_PROVIDERS as BROWSER_SANITIZATION_PROVIDERS} from '@angular/platform-browser';\n\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {WebWorkerRendererFactory2} from './web_workers/worker/renderer';\nimport {WorkerDomAdapter} from './web_workers/worker/worker_adapter';\n/**\n * \\@experimental\n */\nexport const /** @type {?} */ platformWorkerApp = createPlatformFactory(\n    platformCore, 'workerApp', [{provide: PLATFORM_ID, useValue: PLATFORM_WORKER_APP_ID}]);\n/**\n * @return {?}\n */\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\n\n// TODO(jteplitz602) remove this and compile with lib.webworker.d.ts (#3492)\nconst /** @type {?} */ _postMessage = {\n  postMessage: (message: any, transferrables?: [ArrayBuffer]) => {\n    ( /** @type {?} */((<any>postMessage)))(message, transferrables);\n  }\n};\n/**\n * @param {?} zone\n * @return {?}\n */\nexport function createMessageBus(zone: NgZone): MessageBus {\n  const /** @type {?} */ sink = new PostMessageBusSink(_postMessage);\n  const /** @type {?} */ source = new PostMessageBusSource();\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n  bus.attachToZone(zone);\n  return bus;\n}\n/**\n * @return {?}\n */\nexport function setupWebWorker(): void {\n  WorkerDomAdapter.makeCurrent();\n}\n/**\n * The ng module for the worker app side.\n * \n * \\@experimental\n */\nexport class WorkerAppModule {\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS,\n    Serializer,\n    {provide: DOCUMENT, useValue: null},\n    {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n    {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n    WebWorkerRendererFactory2,\n    {provide: RendererFactory2, useExisting: WebWorkerRendererFactory2},\n    {provide: ON_WEB_WORKER, useValue: true},\n    RenderStore,\n    {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n    {provide: MessageBus, useFactory: createMessageBus, deps: [NgZone]},\n    {provide: APP_INITIALIZER, useValue: setupWebWorker, multi: true},\n  ],\n  exports: [\n    CommonModule,\n    ApplicationModule,\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction WorkerAppModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWorkerAppModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWorkerAppModule.ctorParameters;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/platform-browser';\n/**\n * This adapter is required to log error messages.\n * \n * Note: other methods all throw as the DOM is not accessible directly in web worker context.\n */\nexport class WorkerDomAdapter extends DomAdapter {\n/**\n * @return {?}\n */\nstatic makeCurrent() { setRootDomAdapter(new WorkerDomAdapter()); }\n/**\n * @param {?} error\n * @return {?}\n */\nlogError(error: any) {\n    if (console.error) {\n      console.error(error);\n    } else {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nlog(error: any) { console.log(error); }\n/**\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: any) {\n    if (console.group) {\n      console.group(error);\n      this.logError(error);\n    } else {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }\n/**\n * @return {?}\n */\nlogGroupEnd() {\n    if (console.groupEnd) {\n      console.groupEnd();\n    }\n  }\n/**\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: any, name: string): boolean { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: Element, name: string, value: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: Element, name: string): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Element, methodName: string, args: any[]): any { throw 'not implemented'; }\n/**\n * @return {?}\n */\nget attrToPropMap(): {[key: string]: string} { throw 'not implemented'; }\n/**\n * @param {?} value\n * @return {?}\n */\nset attrToPropMap(value: {[key: string]: string}) { throw 'not implemented'; }\n/**\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: any, selector: string): HTMLElement { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string): any[] { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: any, evt: any, listener: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: any, evt: any, listener: any): Function { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: any, evt: any) { throw 'not implemented'; }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: any): any { throw 'not implemented'; }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: string): any { throw 'not implemented'; }\n/**\n * @param {?} evt\n * @return {?}\n */\npreventDefault(evt: any) { throw 'not implemented'; }\n/**\n * @param {?} evt\n * @return {?}\n */\nisPrevented(evt: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: any): string { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: any): string { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeName(node: any): string { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: any): string { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\ntype(node: any): string { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\ncontent(node: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: any): Node { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: any): Node { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nparentElement(el: any): Node { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any): Node[] { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: any): Node[] { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: any, node: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: any, node: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} newNode\n * @param {?} oldNode\n * @return {?}\n */\nreplaceChild(el: any, newNode: any, oldNode: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nremove(el: any): Node { throw 'not implemented'; }\n/**\n * @param {?} parent\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\ninsertBefore(parent: any, el: any, node: any) { throw 'not implemented'; }\n/**\n * @param {?} parent\n * @param {?} el\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: any, el: any, nodes: any) { throw 'not implemented'; }\n/**\n * @param {?} parent\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: any, el: any, node: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: any, value: any) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetText(el: any): string { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: any, value: string) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any): string { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) { throw 'not implemented'; }\n/**\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string): any { throw 'not implemented'; }\n/**\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any): HTMLElement { throw 'not implemented'; }\n/**\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElement(tagName: any, doc?: any): HTMLElement { throw 'not implemented'; }\n/**\n * @param {?} ns\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElementNS(ns: string, tagName: string, doc?: any): Element { throw 'not implemented'; }\n/**\n * @param {?} text\n * @param {?=} doc\n * @return {?}\n */\ncreateTextNode(text: string, doc?: any): Text { throw 'not implemented'; }\n/**\n * @param {?} attrName\n * @param {?} attrValue\n * @param {?=} doc\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string, doc?: any): HTMLElement {\n    throw 'not implemented';\n  }\n/**\n * @param {?} css\n * @param {?=} doc\n * @return {?}\n */\ncreateStyleElement(css: string, doc?: any): HTMLStyleElement { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHost(el: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: any): Node[] { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nclone(node: Node): Node { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string): HTMLElement[] { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string): HTMLElement[] { throw 'not implemented'; }\n/**\n * @param {?} element\n * @return {?}\n */\nclassList(element: any): any[] { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string): boolean { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\nremoveStyle(element: any, styleName: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\ngetStyle(element: any, styleName: string): string { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue?: string): boolean {\n    throw 'not implemented';\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ntagName(element: any): string { throw 'not implemented'; }\n/**\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any): Map<string, string> { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: any, attribute: string): boolean { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: any, ns: string, attribute: string): boolean { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: any, attribute: string): string { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\ngetAttributeNS(element: any, ns: string, attribute: string): string { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: any, name: string, value: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: any, ns: string, name: string, value: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: any, attribute: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nremoveAttributeNS(element: any, ns: string, attribute: string) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: any) { throw 'not implemented'; }\n/**\n * @return {?}\n */\ncreateHtmlDocument(): HTMLDocument { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetDefaultDocument(): Document { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: any) { throw 'not implemented'; }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document): string { throw 'not implemented'; }\n/**\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) { throw 'not implemented'; }\n/**\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\nelementMatches(n: any, selector: string): boolean { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any): boolean { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc(node: Node): Node { throw 'not implemented'; }\n/**\n * @param {?} node\n * @return {?}\n */\nadoptNode(node: Node): Node { throw 'not implemented'; }\n/**\n * @param {?} element\n * @return {?}\n */\ngetHref(element: any): string { throw 'not implemented'; }\n/**\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any): string { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(element: any, baseUrl: string, href: string) { throw 'not implemented'; }\n/**\n * @return {?}\n */\nsupportsDOMEvents(): boolean { throw 'not implemented'; }\n/**\n * @return {?}\n */\nsupportsNativeShadowDOM(): boolean { throw 'not implemented'; }\n/**\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string): any { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetHistory(): History { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetLocation(): Location { throw 'not implemented'; }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document): string { throw 'not implemented'; }\n/**\n * @return {?}\n */\nresetBaseElement(): void { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetUserAgent(): string { return 'Fake user agent'; }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(element: any, name: string, value: string) { throw 'not implemented'; }\n/**\n * @param {?} element\n * @return {?}\n */\ngetComputedStyle(element: any): any { throw 'not implemented'; }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetData(element: any, name: string): string { throw 'not implemented'; }\n/**\n * @return {?}\n */\nperformanceNow(): number { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetAnimationPrefix(): string { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetTransitionEnd(): string { throw 'not implemented'; }\n/**\n * @return {?}\n */\nsupportsAnimation(): boolean { throw 'not implemented'; }\n/**\n * @return {?}\n */\nsupportsWebAnimation(): boolean { throw 'not implemented'; }\n/**\n * @return {?}\n */\nsupportsCookies(): boolean { return false; }\n/**\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string): string { throw 'not implemented'; }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) { throw 'not implemented'; }\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\n\nimport {ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments} from '../shared/client_message_broker';\nimport {MessageBus} from '../shared/message_bus';\nimport {EVENT_2_CHANNEL, RENDERER_2_CHANNEL} from '../shared/messaging_api';\nimport {RenderStore} from '../shared/render_store';\nimport {Serializer, SerializerTypes} from '../shared/serializer';\nexport class NamedEventEmitter {\nprivate _listeners: Map<string, Function[]>;\n/**\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(eventName: string, callback: Function) { this._getListeners(eventName).push(callback); }\n/**\n * @param {?} eventName\n * @param {?} listener\n * @return {?}\n */\nunlisten(eventName: string, listener: Function) {\n    const /** @type {?} */ listeners = this._getListeners(eventName);\n    const /** @type {?} */ index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n/**\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\ndispatchEvent(eventName: string, event: any) {\n    const /** @type {?} */ listeners = this._getListeners(eventName);\n    for (let /** @type {?} */ i = 0; i < listeners.length; i++) {\n      listeners[i](event);\n    }\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\n\nprivate _getListeners(eventName: string): Function[] {\n    if (!this._listeners) {\n      this._listeners = new Map<string, Function[]>();\n    }\n    let /** @type {?} */ listeners = this._listeners.get(eventName);\n    if (!listeners) {\n      listeners = [];\n      this._listeners.set(eventName, listeners);\n    }\n    return listeners;\n  }\n}\n\nfunction NamedEventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nNamedEventEmitter.prototype._listeners;\n}\n\n/**\n * @param {?} target\n * @param {?} eventName\n * @return {?}\n */\nfunction eventNameWithTarget(target: string, eventName: string): string {\n  return `${target}:${eventName}`;\n}\nexport class WebWorkerRendererFactory2 implements RendererFactory2 {\n  globalEvents = new NamedEventEmitter();\nprivate _messageBroker: ClientMessageBroker;\n/**\n * @param {?} messageBrokerFactory\n * @param {?} bus\n * @param {?} _serializer\n * @param {?} renderStore\n */\nconstructor(\n      messageBrokerFactory: ClientMessageBrokerFactory, bus: MessageBus,\nprivate _serializer: Serializer,\npublic renderStore: RenderStore) {\n    this._messageBroker = messageBrokerFactory.createMessageBroker(RENDERER_2_CHANNEL);\n    bus.initChannel(EVENT_2_CHANNEL);\n    const /** @type {?} */ source = bus.from(EVENT_2_CHANNEL);\n    source.subscribe({next: (message: any) => this._dispatchEvent(message)});\n  }\n/**\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(element: any, type: RendererType2|null): Renderer2 {\n    const /** @type {?} */ renderer = new WebWorkerRenderer2(this);\n\n    const /** @type {?} */ id = this.renderStore.allocateId();\n    this.renderStore.store(renderer, id);\n    this.callUI('createRenderer', [\n      new FnArg(element, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(type, SerializerTypes.RENDERER_TYPE_2),\n      new FnArg(renderer, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n\n    return renderer;\n  }\n/**\n * @return {?}\n */\nbegin() {}\n/**\n * @return {?}\n */\nend() {}\n/**\n * @param {?} fnName\n * @param {?} fnArgs\n * @return {?}\n */\ncallUI(fnName: string, fnArgs: FnArg[]) {\n    const /** @type {?} */ args = new UiArguments(fnName, fnArgs);\n    this._messageBroker.runOnService(args, null);\n  }\n/**\n * @return {?}\n */\nallocateNode(): WebWorkerRenderNode {\n    const /** @type {?} */ result = new WebWorkerRenderNode();\n    const /** @type {?} */ id = this.renderStore.allocateId();\n    this.renderStore.store(result, id);\n    return result;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nfreeNode(node: any) { this.renderStore.remove(node); }\n/**\n * @return {?}\n */\nallocateId(): number { return this.renderStore.allocateId(); }\n/**\n * @param {?} message\n * @return {?}\n */\n\nprivate _dispatchEvent(message: {[key: string]: any}): void {\n    const /** @type {?} */ element: WebWorkerRenderNode =\n        this._serializer.deserialize(message['element'], SerializerTypes.RENDER_STORE_OBJECT);\n\n    const /** @type {?} */ eventName = message['eventName'];\n    const /** @type {?} */ target = message['eventTarget'];\n    const /** @type {?} */ event = message['event'];\n\n    if (target) {\n      this.globalEvents.dispatchEvent(eventNameWithTarget(target, eventName), event);\n    } else {\n      element.events.dispatchEvent(eventName, event);\n    }\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ClientMessageBrokerFactory, },\n{type: MessageBus, },\n{type: Serializer, },\n{type: RenderStore, },\n];\n}\n\nfunction WebWorkerRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerRendererFactory2.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerRendererFactory2.ctorParameters;\n/** @type {?} */\nWebWorkerRendererFactory2.prototype.globalEvents;\n/** @type {?} */\nWebWorkerRendererFactory2.prototype._messageBroker;\n/** @type {?} */\nWebWorkerRendererFactory2.prototype._serializer;\n/** @type {?} */\nWebWorkerRendererFactory2.prototype.renderStore;\n}\n\nexport class WebWorkerRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n/**\n * @param {?} _rendererFactory\n */\nconstructor(private _rendererFactory: WebWorkerRendererFactory2) {}\nprivate asFnArg = new FnArg(this, SerializerTypes.RENDER_STORE_OBJECT);\n/**\n * @return {?}\n */\ndestroy(): void { this.callUIWithRenderer('destroy'); }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    this.callUIWithRenderer('destroyNode', [new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT)]);\n    this._rendererFactory.freeNode(node);\n  }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ node = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('createElement', [\n      new FnArg(name),\n      new FnArg(namespace),\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return node;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ node = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('createComment', [\n      new FnArg(value),\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return node;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ node = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('createText', [\n      new FnArg(value),\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return node;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    this.callUIWithRenderer('appendChild', [\n      new FnArg(parent, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(newChild, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    if (!parent) {\n      return;\n    }\n\n    this.callUIWithRenderer('insertBefore', [\n      new FnArg(parent, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(newChild, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(refChild, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    this.callUIWithRenderer('removeChild', [\n      new FnArg(parent, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(oldChild, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ node = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('selectRootElement', [\n      new FnArg(selectorOrNode),\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return node;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any {\n    const /** @type {?} */ res = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('parentNode', [\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(res, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return res;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any {\n    const /** @type {?} */ res = this._rendererFactory.allocateNode();\n    this.callUIWithRenderer('nextSibling', [\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(res, SerializerTypes.RENDER_STORE_OBJECT),\n    ]);\n    return res;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    this.callUIWithRenderer('setAttribute', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(name),\n      new FnArg(value),\n      new FnArg(namespace),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    this.callUIWithRenderer('removeAttribute', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(name),\n      new FnArg(namespace),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    this.callUIWithRenderer('addClass', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(name),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    this.callUIWithRenderer('removeClass', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(name),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    this.callUIWithRenderer('setStyle', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(style),\n      new FnArg(value),\n      new FnArg(flags),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    this.callUIWithRenderer('removeStyle', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(style),\n      new FnArg(flags),\n    ]);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    this.callUIWithRenderer('setProperty', [\n      new FnArg(el, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(name),\n      new FnArg(value),\n    ]);\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void {\n    this.callUIWithRenderer('setValue', [\n      new FnArg(node, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(value),\n    ]);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} listener\n * @return {?}\n */\nlisten(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      listener: (event: any) => boolean): () => void {\n    const /** @type {?} */ unlistenId = this._rendererFactory.allocateId();\n\n    const [targetEl, targetName, fullName]: [any, string | null, string | null] =\n        typeof target === 'string' ? [null, target, `${target}:${eventName}`] :\n                                     [target, null, null];\n\n    if (fullName) {\n      this._rendererFactory.globalEvents.listen(fullName, listener);\n    } else {\n      targetEl.events.listen(eventName, listener);\n    }\n\n    this.callUIWithRenderer('listen', [\n      new FnArg(targetEl, SerializerTypes.RENDER_STORE_OBJECT),\n      new FnArg(targetName),\n      new FnArg(eventName),\n      new FnArg(unlistenId),\n    ]);\n\n    return () => {\n      if (fullName) {\n        this._rendererFactory.globalEvents.unlisten(fullName, listener);\n      } else {\n        targetEl.events.unlisten(eventName, listener);\n      }\n      this.callUIWithRenderer('unlisten', [new FnArg(unlistenId)]);\n    };\n  }\n/**\n * @param {?} fnName\n * @param {?=} fnArgs\n * @return {?}\n */\n\nprivate callUIWithRenderer(fnName: string, fnArgs: FnArg[] = []) {\n    // always pass the renderer as the first arg\n    this._rendererFactory.callUI(fnName, [this.asFnArg, ...fnArgs]);\n  }\n}\n\nfunction WebWorkerRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerRenderer2.prototype.data;\n/** @type {?} */\nWebWorkerRenderer2.prototype.asFnArg;\n/** @type {?} */\nWebWorkerRenderer2.prototype._rendererFactory;\n}\n\nexport class WebWorkerRenderNode { events = new NamedEventEmitter(); }\n\nfunction WebWorkerRenderNode_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerRenderNode.prototype.events;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LOCATION_INITIALIZED, PlatformLocation} from '@angular/common';\nimport {APP_INITIALIZER, InjectionToken, NgZone} from '@angular/core';\n\nimport {WebWorkerPlatformLocation} from './platform_location';\n/**\n * The {\\@link PlatformLocation} providers that should be added when the {\\@link Location} is used in\n * a worker context.\n * \n * \\@experimental\n */\nexport const /** @type {?} */ WORKER_APP_LOCATION_PROVIDERS = [\n  {provide: PlatformLocation, useClass: WebWorkerPlatformLocation}, {\n    provide: APP_INITIALIZER,\n    useFactory: appInitFnFactory,\n    multi: true,\n    deps: [PlatformLocation, NgZone]\n  },\n  {provide: LOCATION_INITIALIZED, useFactory: locationInitialized, deps: [PlatformLocation]}\n];\n/**\n * @param {?} platformLocation\n * @return {?}\n */\nexport function locationInitialized(platformLocation: WebWorkerPlatformLocation) {\n  return platformLocation.initialized;\n}\n/**\n * @param {?} platformLocation\n * @param {?} zone\n * @return {?}\n */\nexport function appInitFnFactory(platformLocation: WebWorkerPlatformLocation, zone: NgZone): () =>\n    Promise<boolean> {\n  return () => zone.runGuarded(() => platformLocation.init());\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments} from '../shared/client_message_broker';\nimport {MessageBus} from '../shared/message_bus';\nimport {ROUTER_CHANNEL} from '../shared/messaging_api';\nimport {LocationType, Serializer, SerializerTypes} from '../shared/serializer';\nexport class WebWorkerPlatformLocation extends PlatformLocation {\nprivate _broker: ClientMessageBroker;\nprivate _popStateListeners: Array<Function> = [];\nprivate _hashChangeListeners: Array<Function> = [];\nprivate _location: LocationType = /** @type {?} */(( null));\nprivate _channelSource: EventEmitter<Object>;\npublic initialized: Promise<any>;\nprivate initializedResolve: () => void;\n/**\n * @param {?} brokerFactory\n * @param {?} bus\n * @param {?} _serializer\n */\nconstructor(\n      brokerFactory: ClientMessageBrokerFactory, bus: MessageBus,\nprivate _serializer: Serializer) {\n    super();\n    this._broker = brokerFactory.createMessageBroker(ROUTER_CHANNEL);\n    this._channelSource = bus.from(ROUTER_CHANNEL);\n\n    this._channelSource.subscribe({\n      next: (msg: {[key: string]: any}) => {\n        let /** @type {?} */ listeners: Array<Function>|null = null;\n        if (msg.hasOwnProperty('event')) {\n          const /** @type {?} */ type: string = msg['event']['type'];\n          if (type === 'popstate') {\n            listeners = this._popStateListeners;\n          } else if (type === 'hashchange') {\n            listeners = this._hashChangeListeners;\n          }\n\n          if (listeners) {\n            // There was a popState or hashChange event, so the location object thas been updated\n            this._location = this._serializer.deserialize(msg['location'], LocationType);\n            listeners.forEach((fn: Function) => fn(msg['event']));\n          }\n        }\n      }\n    });\n    this.initialized = new Promise(res => this.initializedResolve = res);\n  }\n/**\n * \\@internal *\n * @return {?}\n */\ninit(): Promise<boolean> {\n    const /** @type {?} */ args: UiArguments = new UiArguments('getLocation');\n\n    return /** @type {?} */(( this._broker.runOnService(args, LocationType))).then(\n        (val: LocationType) => {\n          this._location = val;\n          this.initializedResolve();\n          return true;\n        },\n        err => { throw new Error(err); });\n  }\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string {\n    throw new Error(\n        'Attempt to get base href from DOM from WebWorker. You must either provide a value for the APP_BASE_HREF token through DI or use the hash location strategy.');\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void { this._popStateListeners.push(fn); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener): void { this._hashChangeListeners.push(fn); }\n/**\n * @return {?}\n */\nget pathname(): string { return this._location ? /** @type {?} */(( this._location.pathname)) : '<unknown>'; }\n/**\n * @return {?}\n */\nget search(): string { return this._location ? this._location.search : '<unknown>'; }\n/**\n * @return {?}\n */\nget hash(): string { return this._location ? this._location.hash : '<unknown>'; }\n/**\n * @param {?} newPath\n * @return {?}\n */\nset pathname(newPath: string) {\n    if (this._location === null) {\n      throw new Error('Attempt to set pathname before value is obtained from UI');\n    }\n\n    this._location.pathname = newPath;\n\n    const /** @type {?} */ fnArgs = [new FnArg(newPath, SerializerTypes.PRIMITIVE)];\n    const /** @type {?} */ args = new UiArguments('setPathname', fnArgs);\n    this._broker.runOnService(args, null);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string): void {\n    const /** @type {?} */ fnArgs = [\n      new FnArg(state, SerializerTypes.PRIMITIVE),\n      new FnArg(title, SerializerTypes.PRIMITIVE),\n      new FnArg(url, SerializerTypes.PRIMITIVE),\n    ];\n    const /** @type {?} */ args = new UiArguments('pushState', fnArgs);\n    this._broker.runOnService(args, null);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string): void {\n    const /** @type {?} */ fnArgs = [\n      new FnArg(state, SerializerTypes.PRIMITIVE),\n      new FnArg(title, SerializerTypes.PRIMITIVE),\n      new FnArg(url, SerializerTypes.PRIMITIVE),\n    ];\n    const /** @type {?} */ args = new UiArguments('replaceState', fnArgs);\n    this._broker.runOnService(args, null);\n  }\n/**\n * @return {?}\n */\nforward(): void {\n    const /** @type {?} */ args = new UiArguments('forward');\n    this._broker.runOnService(args, null);\n  }\n/**\n * @return {?}\n */\nback(): void {\n    const /** @type {?} */ args = new UiArguments('back');\n    this._broker.runOnService(args, null);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ClientMessageBrokerFactory, },\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\nfunction WebWorkerPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerPlatformLocation.ctorParameters;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._broker;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._popStateListeners;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._hashChangeListeners;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._location;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._channelSource;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype.initialized;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype.initializedResolve;\n/** @type {?} */\nWebWorkerPlatformLocation.prototype._serializer;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Injector, NgZone, PLATFORM_INITIALIZER, StaticProvider} from '@angular/core';\nimport {ɵBrowserPlatformLocation as BrowserPlatformLocation} from '@angular/platform-browser';\n\nimport {MessageBus} from '../shared/message_bus';\nimport {Serializer} from '../shared/serializer';\nimport {ServiceMessageBrokerFactory} from '../shared/service_message_broker';\n\nimport {MessageBasedPlatformLocation} from './platform_location';\n/**\n * A list of {\\@link Provider}s. To use the router in a Worker enabled application you must\n * include these providers when setting up the render thread.\n * \\@experimental\n */\nexport const /** @type {?} */ WORKER_UI_LOCATION_PROVIDERS = /** @type {?} */(( <StaticProvider[]>[\n  {provide: MessageBasedPlatformLocation, deps: [ServiceMessageBrokerFactory,\n    BrowserPlatformLocation, MessageBus, Serializer]},\n  {provide: BrowserPlatformLocation, deps: [DOCUMENT]},\n  {provide: PLATFORM_INITIALIZER, useFactory: initUiLocation, multi: true, deps: [Injector]}\n]));\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initUiLocation(injector: Injector): () => void {\n  return () => {\n    const /** @type {?} */ zone = injector.get(NgZone);\n\n    zone.runGuarded(() => injector.get(MessageBasedPlatformLocation).start());\n  };\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {ɵBrowserPlatformLocation as BrowserPlatformLocation} from '@angular/platform-browser';\nimport {MessageBus} from '../shared/message_bus';\nimport {ROUTER_CHANNEL} from '../shared/messaging_api';\nimport {LocationType, Serializer, SerializerTypes} from '../shared/serializer';\nimport {ServiceMessageBroker, ServiceMessageBrokerFactory} from '../shared/service_message_broker';\nexport class MessageBasedPlatformLocation {\nprivate _channelSink: EventEmitter<Object>;\nprivate _broker: ServiceMessageBroker;\n/**\n * @param {?} _brokerFactory\n * @param {?} _platformLocation\n * @param {?} bus\n * @param {?} _serializer\n */\nconstructor(\nprivate _brokerFactory: ServiceMessageBrokerFactory,\nprivate _platformLocation: BrowserPlatformLocation, bus: MessageBus,\nprivate _serializer: Serializer) {\n    this._platformLocation.onPopState( /** @type {?} */((<LocationChangeListener>this._sendUrlChangeEvent.bind(this))));\n    this._platformLocation.onHashChange( /** @type {?} */((\n        <LocationChangeListener>this._sendUrlChangeEvent.bind(this))));\n    this._broker = this._brokerFactory.createMessageBroker(ROUTER_CHANNEL);\n    this._channelSink = bus.to(ROUTER_CHANNEL);\n  }\n/**\n * @return {?}\n */\nstart(): void {\n    const /** @type {?} */ P = SerializerTypes.PRIMITIVE;\n\n    this._broker.registerMethod('getLocation', null, this._getLocation.bind(this), LocationType);\n    this._broker.registerMethod('setPathname', [P], this._setPathname.bind(this));\n    this._broker.registerMethod(\n        'pushState', [P, P, P], this._platformLocation.pushState.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'replaceState', [P, P, P],\n        this._platformLocation.replaceState.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'forward', null, this._platformLocation.forward.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'back', null, this._platformLocation.back.bind(this._platformLocation));\n  }\n/**\n * @return {?}\n */\n\nprivate _getLocation(): Promise<Location> {\n    return Promise.resolve(this._platformLocation.location);\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n\nprivate _sendUrlChangeEvent(e: Event): void {\n    this._channelSink.emit({\n      'event': {'type': e.type},\n      'location': this._serializer.serialize(this._platformLocation.location, LocationType),\n    });\n  }\n/**\n * @param {?} pathname\n * @return {?}\n */\n\nprivate _setPathname(pathname: string): void { this._platformLocation.pathname = pathname; }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ServiceMessageBrokerFactory, },\n{type: BrowserPlatformLocation, },\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\nfunction MessageBasedPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBasedPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMessageBasedPlatformLocation.ctorParameters;\n/** @type {?} */\nMessageBasedPlatformLocation.prototype._channelSink;\n/** @type {?} */\nMessageBasedPlatformLocation.prototype._broker;\n/** @type {?} */\nMessageBasedPlatformLocation.prototype._brokerFactory;\n/** @type {?} */\nMessageBasedPlatformLocation.prototype._platformLocation;\n/** @type {?} */\nMessageBasedPlatformLocation.prototype._serializer;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.5-ee04217');\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, ɵPLATFORM_WORKER_UI_ID as PLATFORM_WORKER_UI_ID} from '@angular/common';\nimport {ErrorHandler, Injectable, InjectionToken, Injector, NgZone, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, RootRenderer, StaticProvider, Testability, createPlatformFactory, isDevMode, platformCore, ɵAPP_ID_RANDOM_PROVIDER as APP_ID_RANDOM_PROVIDER} from '@angular/core';\nimport {DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig, ɵBROWSER_SANITIZATION_PROVIDERS as BROWSER_SANITIZATION_PROVIDERS, ɵBrowserDomAdapter as BrowserDomAdapter, ɵBrowserGetTestability as BrowserGetTestability, ɵDomEventsPlugin as DomEventsPlugin, ɵDomRendererFactory2 as DomRendererFactory2, ɵDomSharedStylesHost as DomSharedStylesHost, ɵHammerGesturesPlugin as HammerGesturesPlugin, ɵKeyEventsPlugin as KeyEventsPlugin, ɵSharedStylesHost as SharedStylesHost, ɵgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer2} from './web_workers/ui/renderer';\n/**\n * Wrapper class that exposes the Worker\n * and underlying {\\@link MessageBus} for lower level message passing.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport class WebWorkerInstance {\npublic worker: Worker;\npublic bus: MessageBus;\n/**\n * \\@internal\n * @param {?} worker\n * @param {?} bus\n * @return {?}\n */\n\npublic init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction WebWorkerInstance_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerInstance.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerInstance.ctorParameters;\n/** @type {?} */\nWebWorkerInstance.prototype.worker;\n/** @type {?} */\nWebWorkerInstance.prototype.bus;\n}\n\n/**\n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_SCRIPT = new InjectionToken<string>('WebWorkerScript');\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new InjectionToken<({start: () => void})[]>('WorkerRenderStartableMsgService');\n\nexport const /** @type {?} */ _WORKER_UI_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  {\n    provide: MessageBasedRenderer2,\n    deps: [ServiceMessageBrokerFactory, MessageBus, Serializer, RenderStore, RendererFactory2]\n  },\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer2, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    deps: [DOCUMENT, NgZone],\n    multi: true\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, deps: [DOCUMENT], multi: true},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG],\n    multi: true\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRendererFactory2, deps: [EventManager, DomSharedStylesHost]},\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {\n    provide: ServiceMessageBrokerFactory,\n    useClass: ServiceMessageBrokerFactory_,\n    deps: [MessageBus, Serializer]\n  },\n  {\n    provide: ClientMessageBrokerFactory,\n    useClass: ClientMessageBrokerFactory_,\n    deps: [MessageBus, Serializer]\n  },\n  {provide: Serializer, deps: [RenderStore]},\n  {provide: ON_WEB_WORKER, useValue: false},\n  {provide: RenderStore, deps: []},\n  {provide: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, deps: [NgZone]},\n  {provide: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  {provide: WebWorkerInstance, deps: []},\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_WORKER_UI_ID},\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]},\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const /** @type {?} */ bus = injector.get(MessageBus);\n  const /** @type {?} */ zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const /** @type {?} */ services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let /** @type {?} */ scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch ( /** @type {?} */e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const /** @type {?} */ instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n/**\n * \\@experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document(): any {\n  return document;\n}\n/**\n * @return {?}\n */\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n * @param {?} uri\n * @param {?} instance\n * @return {?}\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const /** @type {?} */ webWorker: Worker = new Worker(uri);\n  const /** @type {?} */ sink = new PostMessageBusSink(webWorker);\n  const /** @type {?} */ source = new PostMessageBusSource(webWorker);\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\n\nimport {MessageBus} from '../shared/message_bus';\nimport {EVENT_2_CHANNEL, RENDERER_2_CHANNEL} from '../shared/messaging_api';\nimport {RenderStore} from '../shared/render_store';\nimport {Serializer, SerializerTypes} from '../shared/serializer';\nimport {ServiceMessageBroker, ServiceMessageBrokerFactory} from '../shared/service_message_broker';\nimport {EventDispatcher} from '../ui/event_dispatcher';\nexport class MessageBasedRenderer2 {\nprivate _eventDispatcher: EventDispatcher;\n/**\n * @param {?} _brokerFactory\n * @param {?} _bus\n * @param {?} _serializer\n * @param {?} _renderStore\n * @param {?} _rendererFactory\n */\nconstructor(\nprivate _brokerFactory: ServiceMessageBrokerFactory,\nprivate _bus: MessageBus,\nprivate _serializer: Serializer,\nprivate _renderStore: RenderStore,\nprivate _rendererFactory: RendererFactory2) {}\n/**\n * @return {?}\n */\nstart(): void {\n    const /** @type {?} */ broker = this._brokerFactory.createMessageBroker(RENDERER_2_CHANNEL);\n\n    this._bus.initChannel(EVENT_2_CHANNEL);\n    this._eventDispatcher = new EventDispatcher(this._bus.to(EVENT_2_CHANNEL), this._serializer);\n\n    const [RSO, P, CRT] = [\n      SerializerTypes.RENDER_STORE_OBJECT,\n      SerializerTypes.PRIMITIVE,\n      SerializerTypes.RENDERER_TYPE_2,\n    ];\n\n    const /** @type {?} */ methods: any[][] = [\n      ['createRenderer', this.createRenderer, RSO, CRT, P],\n      ['createElement', this.createElement, RSO, P, P, P],\n      ['createComment', this.createComment, RSO, P, P], ['createText', this.createText, RSO, P, P],\n      ['appendChild', this.appendChild, RSO, RSO, RSO],\n      ['insertBefore', this.insertBefore, RSO, RSO, RSO, RSO],\n      ['removeChild', this.removeChild, RSO, RSO, RSO],\n      ['selectRootElement', this.selectRootElement, RSO, P, P],\n      ['parentNode', this.parentNode, RSO, RSO, P], ['nextSibling', this.nextSibling, RSO, RSO, P],\n      ['setAttribute', this.setAttribute, RSO, RSO, P, P, P],\n      ['removeAttribute', this.removeAttribute, RSO, RSO, P, P],\n      ['addClass', this.addClass, RSO, RSO, P], ['removeClass', this.removeClass, RSO, RSO, P],\n      ['setStyle', this.setStyle, RSO, RSO, P, P, P],\n      ['removeStyle', this.removeStyle, RSO, RSO, P, P],\n      ['setProperty', this.setProperty, RSO, RSO, P, P], ['setValue', this.setValue, RSO, RSO, P],\n      ['listen', this.listen, RSO, RSO, P, P, P], ['unlisten', this.unlisten, RSO, RSO],\n      ['destroy', this.destroy, RSO], ['destroyNode', this.destroyNode, RSO, P]\n\n    ];\n\n    methods.forEach(([name, method, ...argTypes]: any[]) => {\n      broker.registerMethod(name, argTypes, method.bind(this));\n    });\n  }\n/**\n * @param {?} r\n * @return {?}\n */\n\nprivate destroy(r: Renderer2) { r.destroy(); }\n/**\n * @param {?} r\n * @param {?} node\n * @return {?}\n */\n\nprivate destroyNode(r: Renderer2, node: any) {\n    if (r.destroyNode) {\n      r.destroyNode(node);\n    }\n    this._renderStore.remove(node);\n  }\n/**\n * @param {?} el\n * @param {?} type\n * @param {?} id\n * @return {?}\n */\n\nprivate createRenderer(el: any, type: RendererType2, id: number) {\n    this._renderStore.store(this._rendererFactory.createRenderer(el, type), id);\n  }\n/**\n * @param {?} r\n * @param {?} name\n * @param {?} namespace\n * @param {?} id\n * @return {?}\n */\n\nprivate createElement(r: Renderer2, name: string, namespace: string, id: number) {\n    this._renderStore.store(r.createElement(name, namespace), id);\n  }\n/**\n * @param {?} r\n * @param {?} value\n * @param {?} id\n * @return {?}\n */\n\nprivate createComment(r: Renderer2, value: string, id: number) {\n    this._renderStore.store(r.createComment(value), id);\n  }\n/**\n * @param {?} r\n * @param {?} value\n * @param {?} id\n * @return {?}\n */\n\nprivate createText(r: Renderer2, value: string, id: number) {\n    this._renderStore.store(r.createText(value), id);\n  }\n/**\n * @param {?} r\n * @param {?} parent\n * @param {?} child\n * @return {?}\n */\n\nprivate appendChild(r: Renderer2, parent: any, child: any) { r.appendChild(parent, child); }\n/**\n * @param {?} r\n * @param {?} parent\n * @param {?} child\n * @param {?} ref\n * @return {?}\n */\n\nprivate insertBefore(r: Renderer2, parent: any, child: any, ref: any) {\n    r.insertBefore(parent, child, ref);\n  }\n/**\n * @param {?} r\n * @param {?} parent\n * @param {?} child\n * @return {?}\n */\n\nprivate removeChild(r: Renderer2, parent: any, child: any) { r.removeChild(parent, child); }\n/**\n * @param {?} r\n * @param {?} selector\n * @param {?} id\n * @return {?}\n */\n\nprivate selectRootElement(r: Renderer2, selector: string, id: number) {\n    this._renderStore.store(r.selectRootElement(selector), id);\n  }\n/**\n * @param {?} r\n * @param {?} node\n * @param {?} id\n * @return {?}\n */\n\nprivate parentNode(r: Renderer2, node: any, id: number) {\n    this._renderStore.store(r.parentNode(node), id);\n  }\n/**\n * @param {?} r\n * @param {?} node\n * @param {?} id\n * @return {?}\n */\n\nprivate nextSibling(r: Renderer2, node: any, id: number) {\n    this._renderStore.store(r.nextSibling(node), id);\n  }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?} namespace\n * @return {?}\n */\n\nprivate setAttribute(r: Renderer2, el: any, name: string, value: string, namespace: string) {\n    r.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} name\n * @param {?} namespace\n * @return {?}\n */\n\nprivate removeAttribute(r: Renderer2, el: any, name: string, namespace: string) {\n    r.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\n\nprivate addClass(r: Renderer2, el: any, name: string) { r.addClass(el, name); }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\n\nprivate removeClass(r: Renderer2, el: any, name: string) { r.removeClass(el, name); }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\n\nprivate setStyle(r: Renderer2, el: any, style: string, value: any, flags: RendererStyleFlags2) {\n    r.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\n\nprivate removeStyle(r: Renderer2, el: any, style: string, flags: RendererStyleFlags2) {\n    r.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\n\nprivate setProperty(r: Renderer2, el: any, name: string, value: any) {\n    r.setProperty(el, name, value);\n  }\n/**\n * @param {?} r\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\n\nprivate setValue(r: Renderer2, node: any, value: string) { r.setValue(node, value); }\n/**\n * @param {?} r\n * @param {?} el\n * @param {?} elName\n * @param {?} eventName\n * @param {?} unlistenId\n * @return {?}\n */\n\nprivate listen(r: Renderer2, el: any, elName: string, eventName: string, unlistenId: number) {\n    const /** @type {?} */ listener = (event: any) => {\n      return this._eventDispatcher.dispatchRenderEvent(el, elName, eventName, event);\n    };\n\n    const /** @type {?} */ unlisten = r.listen(el || elName, eventName, listener);\n    this._renderStore.store(unlisten, unlistenId);\n  }\n/**\n * @param {?} r\n * @param {?} unlisten\n * @return {?}\n */\n\nprivate unlisten(r: Renderer2, unlisten: () => boolean) { unlisten(); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: ServiceMessageBrokerFactory, },\n{type: MessageBus, },\n{type: Serializer, },\n{type: RenderStore, },\n{type: RendererFactory2, },\n];\n}\n\nfunction MessageBasedRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nMessageBasedRenderer2.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMessageBasedRenderer2.ctorParameters;\n/** @type {?} */\nMessageBasedRenderer2.prototype._eventDispatcher;\n/** @type {?} */\nMessageBasedRenderer2.prototype._brokerFactory;\n/** @type {?} */\nMessageBasedRenderer2.prototype._bus;\n/** @type {?} */\nMessageBasedRenderer2.prototype._serializer;\n/** @type {?} */\nMessageBasedRenderer2.prototype._renderStore;\n/** @type {?} */\nMessageBasedRenderer2.prototype._rendererFactory;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {EventEmitter} from '@angular/core';\nimport {Serializer, SerializerTypes} from '../shared/serializer';\n\nimport {serializeEventWithTarget, serializeGenericEvent, serializeKeyboardEvent, serializeMouseEvent, serializeTransitionEvent} from './event_serializer';\nexport class EventDispatcher {\n/**\n * @param {?} _sink\n * @param {?} _serializer\n */\nconstructor(private _sink: EventEmitter<any>,\nprivate _serializer: Serializer) {}\n/**\n * @param {?} player\n * @param {?} phaseName\n * @param {?} element\n * @return {?}\n */\ndispatchAnimationEvent(player: any, phaseName: string, element: any): boolean {\n    this._sink.emit({\n      'element': this._serializer.serialize(element, SerializerTypes.RENDER_STORE_OBJECT),\n      'animationPlayer': this._serializer.serialize(player, SerializerTypes.RENDER_STORE_OBJECT),\n      'phaseName': phaseName,\n    });\n    return true;\n  }\n/**\n * @param {?} element\n * @param {?} eventTarget\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\ndispatchRenderEvent(element: any, eventTarget: string, eventName: string, event: any): boolean {\n    let /** @type {?} */ serializedEvent: any;\n    // TODO (jteplitz602): support custom events #3350\n    switch (event.type) {\n      case 'click':\n      case 'mouseup':\n      case 'mousedown':\n      case 'dblclick':\n      case 'contextmenu':\n      case 'mouseenter':\n      case 'mouseleave':\n      case 'mousemove':\n      case 'mouseout':\n      case 'mouseover':\n      case 'show':\n        serializedEvent = serializeMouseEvent(event);\n        break;\n      case 'keydown':\n      case 'keypress':\n      case 'keyup':\n        serializedEvent = serializeKeyboardEvent(event);\n        break;\n      case 'input':\n      case 'change':\n      case 'blur':\n        serializedEvent = serializeEventWithTarget(event);\n        break;\n      case 'abort':\n      case 'afterprint':\n      case 'beforeprint':\n      case 'cached':\n      case 'canplay':\n      case 'canplaythrough':\n      case 'chargingchange':\n      case 'chargingtimechange':\n      case 'close':\n      case 'dischargingtimechange':\n      case 'DOMContentLoaded':\n      case 'downloading':\n      case 'durationchange':\n      case 'emptied':\n      case 'ended':\n      case 'error':\n      case 'fullscreenchange':\n      case 'fullscreenerror':\n      case 'invalid':\n      case 'languagechange':\n      case 'levelfchange':\n      case 'loadeddata':\n      case 'loadedmetadata':\n      case 'obsolete':\n      case 'offline':\n      case 'online':\n      case 'open':\n      case 'orientatoinchange':\n      case 'pause':\n      case 'pointerlockchange':\n      case 'pointerlockerror':\n      case 'play':\n      case 'playing':\n      case 'ratechange':\n      case 'readystatechange':\n      case 'reset':\n      case 'scroll':\n      case 'seeked':\n      case 'seeking':\n      case 'stalled':\n      case 'submit':\n      case 'success':\n      case 'suspend':\n      case 'timeupdate':\n      case 'updateready':\n      case 'visibilitychange':\n      case 'volumechange':\n      case 'waiting':\n        serializedEvent = serializeGenericEvent(event);\n        break;\n      case 'transitionend':\n        serializedEvent = serializeTransitionEvent(event);\n        break;\n      default:\n        throw new Error(eventName + ' not supported on WebWorkers');\n    }\n\n    this._sink.emit({\n      'element': this._serializer.serialize(element, SerializerTypes.RENDER_STORE_OBJECT),\n      'eventName': eventName,\n      'eventTarget': eventTarget,\n      'event': serializedEvent,\n    });\n\n    // TODO(kegluneq): Eventually, we want the user to indicate from the UI side whether the event\n    // should be canceled, but for now just call `preventDefault` on the original DOM event.\n    return false;\n  }\n}\n\nfunction EventDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nEventDispatcher.prototype._sink;\n/** @type {?} */\nEventDispatcher.prototype._serializer;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst /** @type {?} */ MOUSE_EVENT_PROPERTIES = [\n  'altKey', 'button', 'clientX', 'clientY', 'metaKey', 'movementX', 'movementY', 'offsetX',\n  'offsetY', 'region', 'screenX', 'screenY', 'shiftKey'\n];\n\nconst /** @type {?} */ KEYBOARD_EVENT_PROPERTIES = [\n  'altkey', 'charCode', 'code', 'ctrlKey', 'isComposing', 'key', 'keyCode', 'location', 'metaKey',\n  'repeat', 'shiftKey', 'which'\n];\n\nconst /** @type {?} */ TRANSITION_EVENT_PROPERTIES = ['propertyName', 'elapsedTime', 'pseudoElement'];\n\nconst /** @type {?} */ EVENT_PROPERTIES = ['type', 'bubbles', 'cancelable'];\n\nconst /** @type {?} */ NODES_WITH_VALUE = new Set(\n    ['input', 'select', 'option', 'button', 'li', 'meter', 'progress', 'param', 'textarea']);\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeGenericEvent(e: Event): {[key: string]: any} {\n  return serializeEvent(e, EVENT_PROPERTIES);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeEventWithTarget(e: Event): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeMouseEvent(e: MouseEvent): {[key: string]: any} {\n  return serializeEvent(e, MOUSE_EVENT_PROPERTIES);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeKeyboardEvent(e: KeyboardEvent): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, KEYBOARD_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function serializeTransitionEvent(e: TransitionEvent): {[key: string]: any} {\n  const /** @type {?} */ serializedEvent = serializeEvent(e, TRANSITION_EVENT_PROPERTIES);\n  return addTarget(e, serializedEvent);\n}\n/**\n * @param {?} e\n * @param {?} serializedEvent\n * @return {?}\n */\nfunction addTarget(e: Event, serializedEvent: {[key: string]: any}): {[key: string]: any} {\n  if (NODES_WITH_VALUE.has(( /** @type {?} */((<HTMLElement>e.target))).tagName.toLowerCase())) {\n    const /** @type {?} */ target = /** @type {?} */(( <HTMLInputElement>e.target));\n    serializedEvent['target'] = {'value': target.value};\n    if (target.files) {\n      serializedEvent['target']['files'] = target.files;\n    }\n  }\n  return serializedEvent;\n}\n/**\n * @param {?} e\n * @param {?} properties\n * @return {?}\n */\nfunction serializeEvent(e: any, properties: string[]): {[key: string]: any} {\n  const /** @type {?} */ serialized: {[k: string]: any} = {};\n  for (let /** @type {?} */ i = 0; i < properties.length; i++) {\n    const /** @type {?} */ prop = properties[i];\n    serialized[prop] = e[prop];\n  }\n  return serialized;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable, Type} from '@angular/core';\nimport {MessageBus} from '../shared/message_bus';\nimport {Serializer, SerializerTypes} from '../shared/serializer';\n/**\n * \\@experimental WebWorker support in Angular is currently experimental.\n * @abstract\n */\nexport abstract class ServiceMessageBrokerFactory {\n  /**\n   * Initializes the given channel and attaches a new {@link ServiceMessageBroker} to it.\n   */\n  abstract createMessageBroker(channel: string, runInZone?: boolean): ServiceMessageBroker;\n}\n\nfunction ServiceMessageBrokerFactory_tsickle_Closure_declarations() {\n\n/**\n * Initializes the given channel and attaches a new {\\@link ServiceMessageBroker} to it.\n * @abstract\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\nServiceMessageBrokerFactory.prototype.createMessageBroker = function(channel, runInZone) {};\n}\n\nexport class ServiceMessageBrokerFactory_ extends ServiceMessageBrokerFactory {\n/**\n * \\@internal\n */\n_serializer: Serializer;\n/**\n * @param {?} _messageBus\n * @param {?} _serializer\n */\nconstructor(private _messageBus: MessageBus, _serializer: Serializer) {\n    super();\n    this._serializer = _serializer;\n  }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ncreateMessageBroker(channel: string, runInZone: boolean = true): ServiceMessageBroker {\n    this._messageBus.initChannel(channel, runInZone);\n    return new ServiceMessageBroker_(this._messageBus, this._serializer, channel);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\nfunction ServiceMessageBrokerFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nServiceMessageBrokerFactory_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServiceMessageBrokerFactory_.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nServiceMessageBrokerFactory_.prototype._serializer;\n/** @type {?} */\nServiceMessageBrokerFactory_.prototype._messageBus;\n}\n\n/**\n * Helper class for UIComponents that allows components to register methods.\n * If a registered method message is received from the broker on the worker,\n * the UIMessageBroker deserializes its arguments and calls the registered method.\n * If that method returns a promise, the UIMessageBroker returns the result to the worker.\n * \n * \\@experimental WebWorker support in Angular is currently experimental.\n * @abstract\n */\nexport abstract class ServiceMessageBroker {\n  abstract registerMethod(\n      methodName: string, signature: Array<Type<any>|SerializerTypes>|null, method: Function,\n      returnType?: Type<any>|SerializerTypes): void;\n}\n\nfunction ServiceMessageBroker_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} methodName\n * @param {?} signature\n * @param {?} method\n * @param {?=} returnType\n * @return {?}\n */\nServiceMessageBroker.prototype.registerMethod = function(methodName, signature, method, returnType) {};\n}\n\nexport class ServiceMessageBroker_ extends ServiceMessageBroker {\nprivate _sink: EventEmitter<any>;\nprivate _methods = new Map<string, Function>();\n/**\n * @param {?} messageBus\n * @param {?} _serializer\n * @param {?} channel\n */\nconstructor(messageBus: MessageBus,\nprivate _serializer: Serializer,\npublic channel: string) {\n    super();\n    this._sink = messageBus.to(channel);\n    const /** @type {?} */ source = messageBus.from(channel);\n    source.subscribe({next: (message: any) => this._handleMessage(message)});\n  }\n/**\n * @param {?} methodName\n * @param {?} signature\n * @param {?} method\n * @param {?=} returnType\n * @return {?}\n */\nregisterMethod(\n      methodName: string, signature: Array<Type<any>|SerializerTypes>,\n      method: (..._: any[]) => Promise<any>| void, returnType?: Type<any>|SerializerTypes): void {\n    this._methods.set(methodName, (message: ReceivedMessage) => {\n      const /** @type {?} */ serializedArgs = message.args;\n      const /** @type {?} */ numArgs = signature ? signature.length : 0;\n      const /** @type {?} */ deserializedArgs = new Array(numArgs);\n      for (let /** @type {?} */ i = 0; i < numArgs; i++) {\n        const /** @type {?} */ serializedArg = serializedArgs[i];\n        deserializedArgs[i] = this._serializer.deserialize(serializedArg, signature[i]);\n      }\n\n      const /** @type {?} */ promise = method(...deserializedArgs);\n      if (returnType && promise) {\n        this._wrapWebWorkerPromise(message.id, promise, returnType);\n      }\n    });\n  }\n/**\n * @param {?} message\n * @return {?}\n */\n\nprivate _handleMessage(message: ReceivedMessage): void {\n    if (this._methods.has(message.method)) { /** @type {?} */((\n      this._methods.get(message.method)))(message);\n    }\n  }\n/**\n * @param {?} id\n * @param {?} promise\n * @param {?} type\n * @return {?}\n */\n\nprivate _wrapWebWorkerPromise(id: string, promise: Promise<any>, type: Type<any>|SerializerTypes):\n      void {\n    promise.then((result: any) => {\n      this._sink.emit({\n        'type': 'result',\n        'value': this._serializer.serialize(result, type),\n        'id': id,\n      });\n    });\n  }\n}\n\nfunction ServiceMessageBroker__tsickle_Closure_declarations() {\n/** @type {?} */\nServiceMessageBroker_.prototype._sink;\n/** @type {?} */\nServiceMessageBroker_.prototype._methods;\n/** @type {?} */\nServiceMessageBroker_.prototype._serializer;\n/** @type {?} */\nServiceMessageBroker_.prototype.channel;\n}\n\n/**\n * \\@experimental WebWorker support in Angular is currently experimental.\n * @record\n */\nexport function ReceivedMessage() {}\n\n\nfunction ReceivedMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nReceivedMessage.prototype.method;\n/** @type {?} */\nReceivedMessage.prototype.args;\n/** @type {?} */\nReceivedMessage.prototype.id;\n/** @type {?} */\nReceivedMessage.prototype.type;\n}\n\n\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport interface ReceivedMessage {\n  method: string;\n  args: any[];\n  id: string;\n  type: string;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable, NgZone} from '@angular/core';\n\nimport {MessageBus, MessageBusSink, MessageBusSource} from './message_bus';\n/**\n * @record\n */\nexport function PostMessageTarget() {}\n\n\nfunction PostMessageTarget_tsickle_Closure_declarations() {\n/** @type {?} */\nPostMessageTarget.prototype.postMessage;\n}\n\n\n\n\n// TODO(jteplitz602) Replace this with the definition in lib.webworker.d.ts(#3492)\nexport interface PostMessageTarget {\n  postMessage: (message: any, transfer?: [ArrayBuffer]) => void;\n}\nexport class PostMessageBusSink implements MessageBusSink {\nprivate _zone: NgZone;\nprivate _channels: {[key: string]: _Channel} = {};\nprivate _messageBuffer: Array<Object> = [];\n/**\n * @param {?} _postMessageTarget\n */\nconstructor(private _postMessageTarget: PostMessageTarget) {}\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone): void {\n    this._zone = zone;\n    this._zone.runOutsideAngular(\n        () => { this._zone.onStable.subscribe({next: () => { this._handleOnEventDone(); }}); });\n  }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true): void {\n    if (this._channels.hasOwnProperty(channel)) {\n      throw new Error(`${channel} has already been initialized`);\n    }\n\n    const /** @type {?} */ emitter = new EventEmitter(false);\n    const /** @type {?} */ channelInfo = new _Channel(emitter, runInZone);\n    this._channels[channel] = channelInfo;\n    emitter.subscribe((data: Object) => {\n      const /** @type {?} */ message = {channel: channel, message: data};\n      if (runInZone) {\n        this._messageBuffer.push(message);\n      } else {\n        this._sendMessages([message]);\n      }\n    });\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nto(channel: string): EventEmitter<any> {\n    if (this._channels.hasOwnProperty(channel)) {\n      return this._channels[channel].emitter;\n    } else {\n      throw new Error(`${channel} is not set up. Did you forget to call initChannel?`);\n    }\n  }\n/**\n * @return {?}\n */\n\nprivate _handleOnEventDone() {\n    if (this._messageBuffer.length > 0) {\n      this._sendMessages(this._messageBuffer);\n      this._messageBuffer = [];\n    }\n  }\n/**\n * @param {?} messages\n * @return {?}\n */\n\nprivate _sendMessages(messages: Array<Object>) { this._postMessageTarget.postMessage(messages); }\n}\n\nfunction PostMessageBusSink_tsickle_Closure_declarations() {\n/** @type {?} */\nPostMessageBusSink.prototype._zone;\n/** @type {?} */\nPostMessageBusSink.prototype._channels;\n/** @type {?} */\nPostMessageBusSink.prototype._messageBuffer;\n/** @type {?} */\nPostMessageBusSink.prototype._postMessageTarget;\n}\n\nexport class PostMessageBusSource implements MessageBusSource {\nprivate _zone: NgZone;\nprivate _channels: {[key: string]: _Channel} = {};\n/**\n * @param {?=} eventTarget\n */\nconstructor(eventTarget?: EventTarget) {\n    if (eventTarget) {\n      eventTarget.addEventListener('message', (ev: MessageEvent) => this._handleMessages(ev));\n    } else {\n      // if no eventTarget is given we assume we're in a WebWorker and listen on the global scope\n      const /** @type {?} */ workerScope = /** @type {?} */(( <EventTarget>self));\n      workerScope.addEventListener('message', (ev: MessageEvent) => this._handleMessages(ev));\n    }\n  }\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone) { this._zone = zone; }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true) {\n    if (this._channels.hasOwnProperty(channel)) {\n      throw new Error(`${channel} has already been initialized`);\n    }\n\n    const /** @type {?} */ emitter = new EventEmitter(false);\n    const /** @type {?} */ channelInfo = new _Channel(emitter, runInZone);\n    this._channels[channel] = channelInfo;\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nfrom(channel: string): EventEmitter<any> {\n    if (this._channels.hasOwnProperty(channel)) {\n      return this._channels[channel].emitter;\n    } else {\n      throw new Error(`${channel} is not set up. Did you forget to call initChannel?`);\n    }\n  }\n/**\n * @param {?} ev\n * @return {?}\n */\n\nprivate _handleMessages(ev: MessageEvent): void {\n    const /** @type {?} */ messages = ev.data;\n    for (let /** @type {?} */ i = 0; i < messages.length; i++) {\n      this._handleMessage(messages[i]);\n    }\n  }\n/**\n * @param {?} data\n * @return {?}\n */\n\nprivate _handleMessage(data: any): void {\n    const /** @type {?} */ channel = data.channel;\n    if (this._channels.hasOwnProperty(channel)) {\n      const /** @type {?} */ channelInfo = this._channels[channel];\n      if (channelInfo.runInZone) {\n        this._zone.run(() => { channelInfo.emitter.emit(data.message); });\n      } else {\n        channelInfo.emitter.emit(data.message);\n      }\n    }\n  }\n}\n\nfunction PostMessageBusSource_tsickle_Closure_declarations() {\n/** @type {?} */\nPostMessageBusSource.prototype._zone;\n/** @type {?} */\nPostMessageBusSource.prototype._channels;\n}\n\n/**\n * A TypeScript implementation of {\\@link MessageBus} for communicating via JavaScript's\n * postMessage API.\n */\nexport class PostMessageBus implements MessageBus {\n/**\n * @param {?} sink\n * @param {?} source\n */\nconstructor(public sink: PostMessageBusSink,\npublic source: PostMessageBusSource) {}\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone): void {\n    this.source.attachToZone(zone);\n    this.sink.attachToZone(zone);\n  }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true): void {\n    this.source.initChannel(channel, runInZone);\n    this.sink.initChannel(channel, runInZone);\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nfrom(channel: string): EventEmitter<any> { return this.source.from(channel); }\n/**\n * @param {?} channel\n * @return {?}\n */\nto(channel: string): EventEmitter<any> { return this.sink.to(channel); }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: PostMessageBusSink, },\n{type: PostMessageBusSource, },\n];\n}\n\nfunction PostMessageBus_tsickle_Closure_declarations() {\n/** @type {?} */\nPostMessageBus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPostMessageBus.ctorParameters;\n/** @type {?} */\nPostMessageBus.prototype.sink;\n/** @type {?} */\nPostMessageBus.prototype.source;\n}\n\n/**\n * Helper class that wraps a channel's {\\@link EventEmitter} and\n * keeps track of if it should run in the zone.\n */\nclass _Channel {\n/**\n * @param {?} emitter\n * @param {?} runInZone\n */\nconstructor(public emitter: EventEmitter<any>,\npublic runInZone: boolean) {}\n}\n\nfunction _Channel_tsickle_Closure_declarations() {\n/** @type {?} */\n_Channel.prototype.emitter;\n/** @type {?} */\n_Channel.prototype.runInZone;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Injectable, Type, ɵstringify as stringify} from '@angular/core';\nimport {MessageBus} from './message_bus';\nimport {Serializer, SerializerTypes} from './serializer';\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n * @abstract\n */\nexport abstract class ClientMessageBrokerFactory {\n  /**\n   * Initializes the given channel and attaches a new {@link ClientMessageBroker} to it.\n   */\n  abstract createMessageBroker(channel: string, runInZone?: boolean): ClientMessageBroker;\n}\n\nfunction ClientMessageBrokerFactory_tsickle_Closure_declarations() {\n\n/**\n * Initializes the given channel and attaches a new {\\@link ClientMessageBroker} to it.\n * @abstract\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\nClientMessageBrokerFactory.prototype.createMessageBroker = function(channel, runInZone) {};\n}\n\nexport class ClientMessageBrokerFactory_ extends ClientMessageBrokerFactory {\n/**\n * \\@internal\n */\n_serializer: Serializer;\n/**\n * @param {?} _messageBus\n * @param {?} _serializer\n */\nconstructor(private _messageBus: MessageBus, _serializer: Serializer) {\n    super();\n    this._serializer = _serializer;\n  }\n/**\n * Initializes the given channel and attaches a new {\\@link ClientMessageBroker} to it.\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ncreateMessageBroker(channel: string, runInZone: boolean = true): ClientMessageBroker {\n    this._messageBus.initChannel(channel, runInZone);\n    return new ClientMessageBroker_(this._messageBus, this._serializer, channel);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\nfunction ClientMessageBrokerFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nClientMessageBrokerFactory_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClientMessageBrokerFactory_.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nClientMessageBrokerFactory_.prototype._serializer;\n/** @type {?} */\nClientMessageBrokerFactory_.prototype._messageBus;\n}\n\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n * @abstract\n */\nexport abstract class ClientMessageBroker {\n  abstract runOnService(args: UiArguments, returnType: Type<any>|SerializerTypes|null):\n      Promise<any>|null;\n}\n\nfunction ClientMessageBroker_tsickle_Closure_declarations() {\n\n/**\n * @abstract\n * @param {?} args\n * @param {?} returnType\n * @return {?}\n */\nClientMessageBroker.prototype.runOnService = function(args, returnType) {};\n}\n\n/**\n * @record\n */\nfunction PromiseCompleter() {}\n\n\nfunction PromiseCompleter_tsickle_Closure_declarations() {\n/** @type {?} */\nPromiseCompleter.prototype.resolve;\n/** @type {?} */\nPromiseCompleter.prototype.reject;\n}\n\n\ninterface PromiseCompleter {\n  resolve: (result: any) => void;\n  reject: (err: any) => void;\n}\nexport class ClientMessageBroker_ extends ClientMessageBroker {\nprivate _pending = new Map<string, PromiseCompleter>();\nprivate _sink: EventEmitter<any>;\n/**\n * \\@internal\n */\n\npublic _serializer: Serializer;\n/**\n * @param {?} messageBus\n * @param {?} _serializer\n * @param {?} channel\n */\nconstructor(messageBus: MessageBus, _serializer: Serializer,\npublic channel: any) {\n    super();\n    this._sink = messageBus.to(channel);\n    this._serializer = _serializer;\n    const /** @type {?} */ source = messageBus.from(channel);\n\n    source.subscribe({next: (message: ResponseMessageData) => this._handleMessage(message)});\n  }\n/**\n * @param {?} name\n * @return {?}\n */\n\nprivate _generateMessageId(name: string): string {\n    const /** @type {?} */ time: string = stringify(new Date().getTime());\n    let /** @type {?} */ iteration: number = 0;\n    let /** @type {?} */ id: string = name + time + stringify(iteration);\n    while (this._pending.has(id)) {\n      id = `${name}${time}${iteration}`;\n      iteration++;\n    }\n    return id;\n  }\n/**\n * @param {?} args\n * @param {?} returnType\n * @return {?}\n */\nrunOnService(args: UiArguments, returnType: Type<any>|SerializerTypes): Promise<any>|null {\n    const /** @type {?} */ fnArgs: any[] = [];\n    if (args.args) {\n      args.args.forEach(argument => {\n        if (argument.type != null) {\n          fnArgs.push(this._serializer.serialize(argument.value, argument.type));\n        } else {\n          fnArgs.push(argument.value);\n        }\n      });\n    }\n\n    let /** @type {?} */ promise: Promise<any>|null;\n    let /** @type {?} */ id: string|null = null;\n    if (returnType != null) {\n      let /** @type {?} */ completer: PromiseCompleter = /** @type {?} */(( undefined));\n      promise = new Promise((resolve, reject) => { completer = {resolve, reject}; });\n      id = this._generateMessageId(args.method);\n      this._pending.set(id, completer);\n\n      promise.catch((err) => {\n        if (console && console.error) {\n          // tslint:disable-next-line:no-console\n          console.error(err);\n        }\n\n        completer.reject(err);\n      });\n\n      promise = promise.then(\n          (v: any) => this._serializer ? this._serializer.deserialize(v, returnType) : v);\n    } else {\n      promise = null;\n    }\n\n    const /** @type {?} */ message: RequestMessageData = {\n      'method': args.method,\n      'args': fnArgs,\n    };\n    if (id != null) {\n      message['id'] = id;\n    }\n    this._sink.emit(message);\n\n    return promise;\n  }\n/**\n * @param {?} message\n * @return {?}\n */\n\nprivate _handleMessage(message: ResponseMessageData): void {\n    if (message.type === 'result' || message.type === 'error') {\n      const /** @type {?} */ id = /** @type {?} */(( message.id));\n      if (this._pending.has(id)) {\n        if (message.type === 'result') { /** @type {?} */((\n          this._pending.get(id))).resolve(message.value);\n        } else { /** @type {?} */((\n          this._pending.get(id))).reject(message.value);\n        }\n        this._pending.delete(id);\n      }\n    }\n  }\n}\n\nfunction ClientMessageBroker__tsickle_Closure_declarations() {\n/** @type {?} */\nClientMessageBroker_.prototype._pending;\n/** @type {?} */\nClientMessageBroker_.prototype._sink;\n/**\n * \\@internal\n * @type {?}\n */\nClientMessageBroker_.prototype._serializer;\n/** @type {?} */\nClientMessageBroker_.prototype.channel;\n}\n\n/**\n * @record\n */\nfunction RequestMessageData() {}\n\n\nfunction RequestMessageData_tsickle_Closure_declarations() {\n/** @type {?} */\nRequestMessageData.prototype.method;\n/** @type {?|undefined} */\nRequestMessageData.prototype.args;\n/** @type {?|undefined} */\nRequestMessageData.prototype.id;\n}\n\n\ninterface RequestMessageData {\n  method: string;\n  args?: any[];\n  id?: string;\n}\n/**\n * @record\n */\nfunction ResponseMessageData() {}\n\n\nfunction ResponseMessageData_tsickle_Closure_declarations() {\n/** @type {?} */\nResponseMessageData.prototype.type;\n/** @type {?|undefined} */\nResponseMessageData.prototype.value;\n/** @type {?|undefined} */\nResponseMessageData.prototype.id;\n}\n\n\ninterface ResponseMessageData {\n  type: 'result'|'error';\n  value?: any;\n  id?: string;\n}\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n */\nexport class FnArg {\n/**\n * @param {?} value\n * @param {?=} type\n */\nconstructor(\npublic value: any,\npublic type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE) {}\n}\n\nfunction FnArg_tsickle_Closure_declarations() {\n/** @type {?} */\nFnArg.prototype.value;\n/** @type {?} */\nFnArg.prototype.type;\n}\n\n/**\n * \\@experimental WebWorker support in Angular is experimental.\n */\nexport class UiArguments {\n/**\n * @param {?} method\n * @param {?=} args\n */\nconstructor(public method: string,\npublic args?: FnArg[]) {}\n}\n\nfunction UiArguments_tsickle_Closure_declarations() {\n/** @type {?} */\nUiArguments.prototype.method;\n/** @type {?} */\nUiArguments.prototype.args;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, RendererType2, Type, ɵstringify as stringify} from '@angular/core';\nimport {RenderStore} from './render_store';\n\n\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const enum SerializerTypes {\n  // RendererType2\n  RENDERER_TYPE_2,\n  // Primitive types\n  PRIMITIVE,\n  // An object stored in a RenderStore\n  RENDER_STORE_OBJECT,\n}\nexport class LocationType {\n/**\n * @param {?} href\n * @param {?} protocol\n * @param {?} host\n * @param {?} hostname\n * @param {?} port\n * @param {?} pathname\n * @param {?} search\n * @param {?} hash\n * @param {?} origin\n */\nconstructor(\npublic href: string,\npublic protocol: string,\npublic host: string,\npublic hostname: string,\npublic port: string,\npublic pathname: string|null,\npublic search: string,\npublic hash: string,\npublic origin: string) {}\n}\n\nfunction LocationType_tsickle_Closure_declarations() {\n/** @type {?} */\nLocationType.prototype.href;\n/** @type {?} */\nLocationType.prototype.protocol;\n/** @type {?} */\nLocationType.prototype.host;\n/** @type {?} */\nLocationType.prototype.hostname;\n/** @type {?} */\nLocationType.prototype.port;\n/** @type {?} */\nLocationType.prototype.pathname;\n/** @type {?} */\nLocationType.prototype.search;\n/** @type {?} */\nLocationType.prototype.hash;\n/** @type {?} */\nLocationType.prototype.origin;\n}\n\nexport class Serializer {\n/**\n * @param {?} _renderStore\n */\nconstructor(private _renderStore: RenderStore) {}\n/**\n * @param {?} obj\n * @param {?=} type\n * @return {?}\n */\nserialize(obj: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE): Object {\n    if (obj == null || type === SerializerTypes.PRIMITIVE) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(v => this.serialize(v, type));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return /** @type {?} */(( this._renderStore.serialize(obj)));\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._serializeRendererType2(obj);\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error(`No serializer for type ${stringify(type)}`);\n  }\n/**\n * @param {?} map\n * @param {?=} type\n * @param {?=} data\n * @return {?}\n */\ndeserialize(map: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE, data?: any):\n      any {\n    if (map == null || type === SerializerTypes.PRIMITIVE) {\n      return map;\n    }\n    if (Array.isArray(map)) {\n      return map.map(val => this.deserialize(val, type, data));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return this._renderStore.deserialize(map);\n    }\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._deserializeRendererType2(map);\n    }\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n    throw new Error(`No deserializer for type ${stringify(type)}`);\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\n\nprivate _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin,\n    };\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\n\nprivate _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _serializeRenderComponentType(type: RenderComponentType): Object {\n    return {\n      'id': type.id,\n      'templateUrl': type.templateUrl,\n      'slotCount': type.slotCount,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n    };\n  }\n/**\n * @param {?} props\n * @return {?}\n */\n\nprivate _deserializeRenderComponentType(props: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        props['id'], props['templateUrl'], props['slotCount'],\n        this.deserialize(props['encapsulation']), this.deserialize(props['styles']), {});\n  }\n/**\n * @param {?} type\n * @return {?}\n */\n\nprivate _serializeRendererType2(type: RendererType2): {[key: string]: any} {\n    return {\n      'id': type.id,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n      'data': this.serialize(type.data),\n    };\n  }\n/**\n * @param {?} props\n * @return {?}\n */\n\nprivate _deserializeRendererType2(props: {[key: string]: any}): RendererType2 {\n    return {\n      id: props['id'],\n      encapsulation: props['encapsulation'],\n      styles: this.deserialize(props['styles']),\n      data: this.deserialize(props['data'])\n    };\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n{type: RenderStore, },\n];\n}\n\nfunction Serializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSerializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSerializer.ctorParameters;\n/** @type {?} */\nSerializer.prototype._renderStore;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nexport class RenderStore {\nprivate _nextIndex = 0;\nprivate _lookupById = new Map<number, any>();\nprivate _lookupByObject = new Map<any, number>();\n/**\n * @return {?}\n */\nallocateId(): number { return this._nextIndex++; }\n/**\n * @param {?} obj\n * @param {?} id\n * @return {?}\n */\nstore(obj: any, id: number): void {\n    if (id == null) return;\n    this._lookupById.set(id, obj);\n    this._lookupByObject.set(obj, id);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nremove(obj: any): void {\n    const /** @type {?} */ index = this._lookupByObject.get(obj);\n    if (index != null) {\n      this._lookupByObject.delete(obj);\n      this._lookupById.delete(index);\n    }\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ndeserialize(id: number): any {\n    return this._lookupById.has(id) ? this._lookupById.get(id) : null;\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nserialize(obj: any): number|null|undefined {\n    return obj == null ? null : this._lookupByObject.get(obj);\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n\nfunction RenderStore_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderStore.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRenderStore.ctorParameters;\n/** @type {?} */\nRenderStore.prototype._nextIndex;\n/** @type {?} */\nRenderStore.prototype._lookupById;\n/** @type {?} */\nRenderStore.prototype._lookupByObject;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, NgZone} from '@angular/core';\n/**\n * Message Bus is a low level API used to communicate between the UI and the background.\n * Communication is based on a channel abstraction. Messages published in a\n * given channel to one MessageBusSink are received on the same channel\n * by the corresponding MessageBusSource.\n * \n * \\@experimental WebWorker support in Angular is currenlty experimental.\n * @abstract\n */\nexport abstract class MessageBus implements MessageBusSource, MessageBusSink {\n  /**\n   * Sets up a new channel on the MessageBus.\n   * MUST be called before calling from or to on the channel.\n   * If runInZone is true then the source will emit events inside the angular zone\n   * and the sink will buffer messages and send only once the zone exits.\n   * if runInZone is false then the source will emit events inside the global zone\n   * and the sink will send messages immediately.\n   */\n  abstract initChannel(channel: string, runInZone?: boolean): void;\n\n  /**\n   * Assigns this bus to the given zone.\n   * Any callbacks attached to channels where runInZone was set to true on initialization\n   * will be executed in the given zone.\n   */\n  abstract attachToZone(zone: NgZone): void;\n\n  /**\n   * Returns an {@link EventEmitter} that emits every time a message\n   * is received on the given channel.\n   */\n  abstract from(channel: string): EventEmitter<any>;\n\n\n  /**\n   * Returns an {@link EventEmitter} for the given channel\n   * To publish methods to that channel just call next on the returned emitter\n   */\n  abstract to(channel: string): EventEmitter<any>;\n}\n\nfunction MessageBus_tsickle_Closure_declarations() {\n\n/**\n * Sets up a new channel on the MessageBus.\n * MUST be called before calling from or to on the channel.\n * If runInZone is true then the source will emit events inside the angular zone\n * and the sink will buffer messages and send only once the zone exits.\n * if runInZone is false then the source will emit events inside the global zone\n * and the sink will send messages immediately.\n * @abstract\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\nMessageBus.prototype.initChannel = function(channel, runInZone) {};\n\n/**\n * Assigns this bus to the given zone.\n * Any callbacks attached to channels where runInZone was set to true on initialization\n * will be executed in the given zone.\n * @abstract\n * @param {?} zone\n * @return {?}\n */\nMessageBus.prototype.attachToZone = function(zone) {};\n\n/**\n * Returns an {\\@link EventEmitter} that emits every time a message\n * is received on the given channel.\n * @abstract\n * @param {?} channel\n * @return {?}\n */\nMessageBus.prototype.from = function(channel) {};\n\n/**\n * Returns an {\\@link EventEmitter} for the given channel\n * To publish methods to that channel just call next on the returned emitter\n * @abstract\n * @param {?} channel\n * @return {?}\n */\nMessageBus.prototype.to = function(channel) {};\n}\n\n/**\n * \\@experimental WebWorker support in Angular is currenlty experimental.\n * @record\n */\nexport function MessageBusSource() {}\n\n\nfunction MessageBusSource_tsickle_Closure_declarations() {\n/**\n * Sets up a new channel on the MessageBusSource.\n * MUST be called before calling from on the channel.\n * If runInZone is true then the source will emit events inside the angular zone.\n * if runInZone is false then the source will emit events inside the global zone.\n * @type {?}\n */\nMessageBusSource.prototype.initChannel;\n/**\n * Assigns this source to the given zone.\n * Any channels which are initialized with runInZone set to true will emit events that will be\n * executed within the given zone.\n * @type {?}\n */\nMessageBusSource.prototype.attachToZone;\n/**\n * Returns an {\\@link EventEmitter} that emits every time a message\n * is received on the given channel.\n * @type {?}\n */\nMessageBusSource.prototype.from;\n}\n\n\n/**\n * @experimental WebWorker support in Angular is currenlty experimental.\n */\nexport interface MessageBusSource {\n  /**\n   * Sets up a new channel on the MessageBusSource.\n   * MUST be called before calling from on the channel.\n   * If runInZone is true then the source will emit events inside the angular zone.\n   * if runInZone is false then the source will emit events inside the global zone.\n   */\n  initChannel(channel: string, runInZone: boolean): void;\n\n  /**\n   * Assigns this source to the given zone.\n   * Any channels which are initialized with runInZone set to true will emit events that will be\n   * executed within the given zone.\n   */\n  attachToZone(zone: NgZone): void;\n\n  /**\n   * Returns an {@link EventEmitter} that emits every time a message\n   * is received on the given channel.\n   */\n  from(channel: string): EventEmitter<any>;\n}\n/**\n * \\@experimental WebWorker support in Angular is currenlty experimental.\n * @record\n */\nexport function MessageBusSink() {}\n\n\nfunction MessageBusSink_tsickle_Closure_declarations() {\n/**\n * Sets up a new channel on the MessageBusSink.\n * MUST be called before calling to on the channel.\n * If runInZone is true the sink will buffer messages and send only once the zone exits.\n * if runInZone is false the sink will send messages immediately.\n * @type {?}\n */\nMessageBusSink.prototype.initChannel;\n/**\n * Assigns this sink to the given zone.\n * Any channels which are initialized with runInZone set to true will wait for the given zone\n * to exit before sending messages.\n * @type {?}\n */\nMessageBusSink.prototype.attachToZone;\n/**\n * Returns an {\\@link EventEmitter} for the given channel\n * To publish methods to that channel just call next on the returned emitter\n * @type {?}\n */\nMessageBusSink.prototype.to;\n}\n\n\n/**\n * @experimental WebWorker support in Angular is currenlty experimental.\n */\nexport interface MessageBusSink {\n  /**\n   * Sets up a new channel on the MessageBusSink.\n   * MUST be called before calling to on the channel.\n   * If runInZone is true the sink will buffer messages and send only once the zone exits.\n   * if runInZone is false the sink will send messages immediately.\n   */\n  initChannel(channel: string, runInZone: boolean): void;\n\n  /**\n   * Assigns this sink to the given zone.\n   * Any channels which are initialized with runInZone set to true will wait for the given zone\n   * to exit before sending messages.\n   */\n  attachToZone(zone: NgZone): void;\n\n  /**\n   * Returns an {@link EventEmitter} for the given channel\n   * To publish methods to that channel just call next on the returned emitter\n   */\n  to(channel: string): EventEmitter<any>;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}"],"names":["ApplicationModule","APP_INITIALIZER","NgZone","ErrorHandler","RendererFactory2","DOCUMENT$1","ɵBROWSER_SANITIZATION_PROVIDERS","NgModule","BROWSER_SANITIZATION_PROVIDERS","createPlatformFactory","platformCore","PLATFORM_ID","ɵPLATFORM_WORKER_APP_ID","ɵsetRootDomAdapter","Injectable","PlatformLocation","ɵBrowserPlatformLocation","BrowserPlatformLocation","ɵBrowserGetTestability","ɵBrowserDomAdapter","PLATFORM_INITIALIZER","EventManager","EVENT_MANAGER_PLUGINS","Testability","ɵDomSharedStylesHost","DomSharedStylesHost","ɵSharedStylesHost","ɵDomRendererFactory2","ɵAPP_ID_RANDOM_PROVIDER","HAMMER_GESTURE_CONFIG","HammerGestureConfig","DomRendererFactory2","APP_ID_RANDOM_PROVIDER","ɵKeyEventsPlugin","ɵDomEventsPlugin","DOCUMENT","InjectionToken","tslib_1.__extends","EventEmitter","ɵstringify","RenderComponentType"],"mappings":"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"}