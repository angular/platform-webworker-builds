{"version":3,"sources":["../../../../modules/@angular/platform-webworker/src/platform-webworker.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAA,aAAE,EAAc,gBAAA,EAAiB,MAAA,iBAAA,CAAA;AAExC,OAAO,EAAA,OAAE,EAAO,MAAA,WAAA,CAAA;AAChB,OAAO,EAAA,mBAAE,EAAoB,0BAAA,EAA4B,KAAA,EAAO,WAAA,EAAY,MAAA,4CAAA,CAAA;AAC5E,OAAO,EAAA,UAAE,EAA4C,MAAA,kCAAA,CAAA;AACrD,OAAO,EAAA,SAAE,EAA0B,MAAA,iCAAA,CAAA;AACnC,OAAO,EAAkB,oBAAA,EAAsB,2BAAA,EAA4B,MAAA,6CAAA,CAAA;AAC3E,OAAO,EAAA,4BAAE,EAA4B,MAAA,qCAAA,CAAA;AACrC,OAAO,EAAA,6BAAE,EAA6B,MAAA,yCAAA,CAAA;AACtC,OAAO,EAAA,eAAE,EAAgB,iBAAA,EAAkB,MAAA,cAAA,CAAA;AAC3C,OAAO,EAAA,gBAAE,EAAgB,MAAA,iBAAA,CAAA;AACzB;;;;;;;GAOG;AACH,MAFC,4BAGG,eAAuB,EAAE,eAAgC;IAAhC,gCAAA,EAAA,oBAAgC;IAC3D,kDAAkD;IAClD,IAAM,gBAAgB,CAFhB,QAAA,GAAW,gBAAA;QAGf,EAAC,OAFC,EAAQ,aAAA,EAAe,QAAA,EAAU,eAAA,EAAgB;aAGhD,eAFC,EACJ,CAAC;IAIH,MAAM,CAFC,OAAA,CAAQ,OAAC,CAAO,QAAC,CAAQ,CAAC;AAGnC,CAAC","file":"platform-webworker.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, Provider} from '@angular/core';\n\nimport {WORKER_SCRIPT, platformWorkerUi} from './worker_render';\n\nexport {VERSION} from './version';\nexport {ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments} from './web_workers/shared/client_message_broker';\nexport {MessageBus, MessageBusSink, MessageBusSource} from './web_workers/shared/message_bus';\nexport {PRIMITIVE, SerializerTypes} from './web_workers/shared/serializer';\nexport {ReceivedMessage, ServiceMessageBroker, ServiceMessageBrokerFactory} from './web_workers/shared/service_message_broker';\nexport {WORKER_UI_LOCATION_PROVIDERS} from './web_workers/ui/location_providers';\nexport {WORKER_APP_LOCATION_PROVIDERS} from './web_workers/worker/location_providers';\nexport {WorkerAppModule, platformWorkerApp} from './worker_app';\nexport {platformWorkerUi} from './worker_render';\n/**\n * Bootstraps the worker ui.\n * \n * \\@experimental\n * @param {?} workerScriptUri\n * @param {?=} customProviders\n * @return {?}\n */\nexport function bootstrapWorkerUi(\n    workerScriptUri: string, customProviders: Provider[] = []): Promise<PlatformRef> {\n  // For now, just creates the worker ui platform...\n  const /** @type {?} */ platform = platformWorkerUi([\n    {provide: WORKER_SCRIPT, useValue: workerScriptUri},\n    ...customProviders,\n  ]);\n\n  return Promise.resolve(platform);\n}\n"]}