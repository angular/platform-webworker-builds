{"version":3,"sources":["../../../../modules/@angular/platform-webworker/src/worker_app.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAA,YAAE,EAAY,MAAA,iBAAA;OACd,EAAA,eAAE,EAAgB,iBAAA,EAAmB,YAAA,EAAc,QAAA,EAAU,MAAA,EAA+B,YAAA,EAAc,qBAAA,EAAuB,YAAA,EAAa,MAAA,eAAA;OAE9I,EAAA,8BAAE,EAA8B,MAAA,mCAAA;OAChC,EAAA,aAAE,EAAa,MAAA,0BAAA;OACf,EAAA,0BAAE,EAA2B,2BAAA,EAA4B,MAAA,4CAAA;OACzD,EAAA,UAAE,EAAU,MAAA,kCAAA;OACZ,EAAA,cAAE,EAAe,kBAAA,EAAoB,oBAAA,EAAqB,MAAA,uCAAA;OAC1D,EAAA,WAAE,EAAW,MAAA,mCAAA;OACb,EAAA,UAAE,EAAU,MAAA,iCAAA;OACZ,EAAA,2BAAE,EAA4B,4BAAA,EAA6B,MAAA,6CAAA;OAC3D,EAAA,qBAAE,EAAqB,MAAA,+BAAA;OACvB,EAAA,gBAAE,EAAgB,MAAA,qCAAA;AAIzB;;GAEG;AACH,OAAO,IAAA,gBAAA,CAAM,iBAAA,GAAoB,qBAAA,CAAsB,YAAC,EAAa,WAAA,CAAY,CAAC;AAClF;;GAEG;AACH;IACE,MAAM,CAFC,IAAI,YAAA,EAAa,CAAE;AAG5B,CAAC;AAGD,4EAAmE;AACnE,IAAM,gBAAgB,CAFhB,YAAA,GAAe;IAGnB,WAAE,EAFW,UAAA,OAAU,EAAK,cAA8B;QAGzD,CAAA,CAFO,WAAC,CAAA,CAAW,CAAC,OAAC,EAAQ,cAAA,CAAe,CAAC;IAG9C,CAAC;CACF,CAFC;AAGF;;;GAGG;AACH,iCAJC,IAAA;IAKC,IAAM,gBAAM,CAJN,IAAA,GAAO,IAAI,kBAAA,CAAmB,YAAC,CAAY,CAAC;IAKlD,IAAA,gBAAA,CAJM,MAAA,GAAS,IAAI,oBAAA,EAAqB,CAAE;IAK1C,IAAM,gBAAgB,CAJhB,GAAA,GAAM,IAAI,cAAA,CAAe,IAAC,EAAK,MAAA,CAAO,CAAC;IAK7C,GAAG,CAJC,YAAC,CAAY,IAAC,CAAI,CAAC;IAKvB,MAAK,CAJE,GAAA,CAAI;AAKb,CAAC;AACD;;GAEG;AACH;IACE,gBAAgB,CALC,WAAC,EAAW,CAAE;AAMjC,CAAC;AACD;;;;GAIG;AACH;IAAA;IAmBA,CAAC;IArBM,0BAAA,GAAoC;QAI3C,EAHE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;oBAItB,SAAS,EAHE;wBAIT,8BAA8B,EAHE,UAAA;wBAIhC,EAAC,OAHC,EAAQ,0BAAA,EAA4B,QAAA,EAAU,2BAAA,EAA4B;wBAI5E,EAAC,OAHC,EAAQ,2BAAA,EAA6B,QAAA,EAAU,4BAAA,EAA6B;wBAI9E,qBAAqB,EAHE,EAAA,OAAE,EAAQ,YAAA,EAAc,WAAA,EAAa,qBAAA,EAAsB;wBAIlF,EAAC,OAHC,EAAQ,aAAA,EAAe,QAAA,EAAU,IAAA,EAAK,EAAE,WAAA;wBAI1C,EAAC,OAHC,EAAQ,YAAA,EAAc,UAAA,EAAY,YAAA,EAAc,IAAA,EAAM,EAAA,EAAG;wBAI3D,EAAC,OAHC,EAAQ,UAAA,EAAY,UAAA,EAAY,gBAAA,EAAkB,IAAA,EAAM,CAAA,MAAE,CAAM,EAAC;wBAInE,EAAC,OAHC,EAAQ,eAAA,EAAiB,QAAA,EAAU,cAAA,EAAgB,KAAA,EAAO,IAAA,EAAK;qBAIlE;oBACD,OAAO,EAHE,CAAA,YAAE,EAAa,iBAAA,CAAkB;iBAI3C,EAHC,EAAG;KAIJ,CAHC;IAIF,kBANE;IAIK,8BAAA,GAAiF,cAAM,OAAA,EAI7F,EAJ6F,CAI7F,CAHC;IAIF,sBAAC;AAAD,CAnBA,AAmBC,IAAA;AAED;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;AAC/B,CAAC","file":"worker_app.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationModule, ErrorHandler, NgModule, NgZone, PlatformRef, Provider, RootRenderer, createPlatformFactory, platformCore} from '@angular/core';\n\nimport {BROWSER_SANITIZATION_PROVIDERS} from './private_import_platform-browser';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {WebWorkerRootRenderer} from './web_workers/worker/renderer';\nimport {WorkerDomAdapter} from './web_workers/worker/worker_adapter';\n\n\n\n/**\n * @experimental\n */\nexport const /** @type {?} */ platformWorkerApp = createPlatformFactory(platformCore, 'workerApp');\n/**\n * @return {?}\n */\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\n\n// TODO(jteplitz602) remove this and compile with lib.webworker.d.ts (#3492)\nconst /** @type {?} */ _postMessage = {\n  postMessage: (message: any, transferrables?: [ArrayBuffer]) => {\n    ( /** @type {?} */((<any>postMessage)))(message, transferrables);\n  }\n};\n/**\n * @param {?} zone\n * @return {?}\n */\nexport function createMessageBus(zone: NgZone): MessageBus {\n  const /** @type {?} */ sink = new PostMessageBusSink(_postMessage);\n  const /** @type {?} */ source = new PostMessageBusSource();\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n  bus.attachToZone(zone);\n  return bus;\n}\n/**\n * @return {?}\n */\nexport function setupWebWorker(): void {\n  WorkerDomAdapter.makeCurrent();\n}\n/**\n * The ng module for the worker app side.\n * \n * \\@experimental\n */\nexport class WorkerAppModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS, Serializer,\n    {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n    {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n    WebWorkerRootRenderer, {provide: RootRenderer, useExisting: WebWorkerRootRenderer},\n    {provide: ON_WEB_WORKER, useValue: true}, RenderStore,\n    {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n    {provide: MessageBus, useFactory: createMessageBus, deps: [NgZone]},\n    {provide: APP_INITIALIZER, useValue: setupWebWorker, multi: true}\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WorkerAppModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWorkerAppModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWorkerAppModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}