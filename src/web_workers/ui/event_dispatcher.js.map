{"version":3,"sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/ui/event_dispatcher.ts"],"names":[],"mappings":"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","file":"event_dispatcher.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {EventEmitter} from '../../facade/async';\nimport {RenderStoreObject, Serializer} from '../shared/serializer';\n\nimport {serializeEventWithTarget, serializeGenericEvent, serializeKeyboardEvent, serializeMouseEvent, serializeTransitionEvent} from './event_serializer';\nexport class EventDispatcher {\n/**\n * @param {?} _sink\n * @param {?} _serializer\n */\nconstructor(private _sink: EventEmitter<any>,\nprivate _serializer: Serializer) {}\n/**\n * @param {?} player\n * @param {?} phaseName\n * @param {?} element\n * @return {?}\n */\ndispatchAnimationEvent(player: any, phaseName: string, element: any): boolean {\n    this._sink.emit({\n      'element': this._serializer.serialize(element, RenderStoreObject),\n      'animationPlayer': this._serializer.serialize(player, RenderStoreObject),\n      'phaseName': phaseName\n    });\n    return true;\n  }\n/**\n * @param {?} element\n * @param {?} eventTarget\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\ndispatchRenderEvent(element: any, eventTarget: string, eventName: string, event: any): boolean {\n    let /** @type {?} */ serializedEvent: any /** TODO #9100 */;\n    // TODO (jteplitz602): support custom events #3350\n    switch (event.type) {\n      case 'click':\n      case 'mouseup':\n      case 'mousedown':\n      case 'dblclick':\n      case 'contextmenu':\n      case 'mouseenter':\n      case 'mouseleave':\n      case 'mousemove':\n      case 'mouseout':\n      case 'mouseover':\n      case 'show':\n        serializedEvent = serializeMouseEvent(event);\n        break;\n      case 'keydown':\n      case 'keypress':\n      case 'keyup':\n        serializedEvent = serializeKeyboardEvent(event);\n        break;\n      case 'input':\n      case 'change':\n      case 'blur':\n        serializedEvent = serializeEventWithTarget(event);\n        break;\n      case 'abort':\n      case 'afterprint':\n      case 'beforeprint':\n      case 'cached':\n      case 'canplay':\n      case 'canplaythrough':\n      case 'chargingchange':\n      case 'chargingtimechange':\n      case 'close':\n      case 'dischargingtimechange':\n      case 'DOMContentLoaded':\n      case 'downloading':\n      case 'durationchange':\n      case 'emptied':\n      case 'ended':\n      case 'error':\n      case 'fullscreenchange':\n      case 'fullscreenerror':\n      case 'invalid':\n      case 'languagechange':\n      case 'levelfchange':\n      case 'loadeddata':\n      case 'loadedmetadata':\n      case 'obsolete':\n      case 'offline':\n      case 'online':\n      case 'open':\n      case 'orientatoinchange':\n      case 'pause':\n      case 'pointerlockchange':\n      case 'pointerlockerror':\n      case 'play':\n      case 'playing':\n      case 'ratechange':\n      case 'readystatechange':\n      case 'reset':\n      case 'scroll':\n      case 'seeked':\n      case 'seeking':\n      case 'stalled':\n      case 'submit':\n      case 'success':\n      case 'suspend':\n      case 'timeupdate':\n      case 'updateready':\n      case 'visibilitychange':\n      case 'volumechange':\n      case 'waiting':\n        serializedEvent = serializeGenericEvent(event);\n        break;\n      case 'transitionend':\n        serializedEvent = serializeTransitionEvent(event);\n        break;\n      default:\n        throw new Error(eventName + ' not supported on WebWorkers');\n    }\n    this._sink.emit({\n      'element': this._serializer.serialize(element, RenderStoreObject),\n      'eventName': eventName,\n      'eventTarget': eventTarget,\n      'event': serializedEvent\n    });\n\n    // TODO(kegluneq): Eventually, we want the user to indicate from the UI side whether the event\n    // should be canceled, but for now just call `preventDefault` on the original DOM event.\n    return false;\n  }\n}\n\nfunction EventDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nEventDispatcher.prototype._sink;\n/** @type {?} */\nEventDispatcher.prototype._serializer;\n}\n\n"]}