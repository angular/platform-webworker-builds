{"version":3,"sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","file":"serializer.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, Type, ViewEncapsulation} from '@angular/core';\n\nimport {isPresent} from '../../facade/lang';\n\nimport {RenderStore} from './render_store';\nimport {LocationType} from './serialized_types';\n\n// PRIMITIVE is any type that does not need to be serialized (string, number, boolean)\n// We set it to String so that it is considered a Type.\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const /** @type {?} */ PRIMITIVE: Type<any> = String;\nexport class Serializer {\n/**\n * @param {?} _renderStore\n */\nconstructor(private _renderStore: RenderStore) {}\n/**\n * @param {?} obj\n * @param {?} type\n * @return {?}\n */\nserialize(obj: any, type: any): Object {\n    if (!isPresent(obj)) {\n      return null;\n    }\n    if (Array.isArray(obj)) {\n      return ( /** @type {?} */((<any[]>obj))).map(v => this.serialize(v, type));\n    }\n    if (type == PRIMITIVE) {\n      return obj;\n    }\n    if (type == RenderStoreObject) {\n      return this._renderStore.serialize(obj);\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === ViewEncapsulation) {\n      return obj;\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error('No serializer for ' + type.toString());\n  }\n/**\n * @param {?} map\n * @param {?} type\n * @param {?=} data\n * @return {?}\n */\ndeserialize(map: any, type: any, data?: any): any {\n    if (!isPresent(map)) {\n      return null;\n    }\n\n    if (Array.isArray(map)) {\n      return ( /** @type {?} */((<any[]>map))).map(val => this.deserialize(val, type, data));\n    }\n\n    if (type === PRIMITIVE) {\n      return map;\n    }\n\n    if (type === RenderStoreObject) {\n      return this._renderStore.deserialize(map);\n    }\n\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n\n    if (type === ViewEncapsulation) {\n      return /** @type {?} */(( map as ViewEncapsulation));\n    }\n\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n\n    throw new Error('No deserializer for ' + type.toString());\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\nprivate _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin\n    };\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\nprivate _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _serializeRenderComponentType(obj: RenderComponentType): Object {\n    return {\n      'id': obj.id,\n      'templateUrl': obj.templateUrl,\n      'slotCount': obj.slotCount,\n      'encapsulation': this.serialize(obj.encapsulation, ViewEncapsulation),\n      'styles': this.serialize(obj.styles, PRIMITIVE)\n    };\n  }\n/**\n * @param {?} map\n * @return {?}\n */\nprivate _deserializeRenderComponentType(map: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        map['id'], map['templateUrl'], map['slotCount'],\n        this.deserialize(map['encapsulation'], ViewEncapsulation),\n        this.deserialize(map['styles'], PRIMITIVE), {});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RenderStore, },\n];\n}\n\nfunction Serializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSerializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSerializer.ctorParameters;\n/** @type {?} */\nSerializer.prototype._renderStore;\n}\n\n\nexport const /** @type {?} */ ANIMATION_WORKER_PLAYER_PREFIX = 'AnimationPlayer.';\nexport class RenderStoreObject {}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}