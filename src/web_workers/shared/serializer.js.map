{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, Type, ViewEncapsulation} from '@angular/core/index';\n\nimport {isPresent} from '../../facade/lang';\n\nimport {RenderStore} from './render_store';\nimport {LocationType} from './serialized_types';\n\n// PRIMITIVE is any type that does not need to be serialized (string, number, boolean)\n// We set it to String so that it is considered a Type.\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const /** @type {?} */ PRIMITIVE: Type<any> = String;\nexport class Serializer {\n/**\n * @param {?} _renderStore\n */\nconstructor(private _renderStore: RenderStore) {}\n/**\n * @param {?} obj\n * @param {?} type\n * @return {?}\n */\nserialize(obj: any, type: any): Object {\n    if (!isPresent(obj)) {\n      return null;\n    }\n    if (Array.isArray(obj)) {\n      return ( /** @type {?} */((<any[]>obj))).map(v => this.serialize(v, type));\n    }\n    if (type == PRIMITIVE) {\n      return obj;\n    }\n    if (type == RenderStoreObject) {\n      return this._renderStore.serialize(obj);\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === ViewEncapsulation) {\n      return obj;\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error('No serializer for ' + type.toString());\n  }\n/**\n * @param {?} map\n * @param {?} type\n * @param {?=} data\n * @return {?}\n */\ndeserialize(map: any, type: any, data?: any): any {\n    if (!isPresent(map)) {\n      return null;\n    }\n\n    if (Array.isArray(map)) {\n      return ( /** @type {?} */((<any[]>map))).map(val => this.deserialize(val, type, data));\n    }\n\n    if (type === PRIMITIVE) {\n      return map;\n    }\n\n    if (type === RenderStoreObject) {\n      return this._renderStore.deserialize(map);\n    }\n\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n\n    if (type === ViewEncapsulation) {\n      return /** @type {?} */(( map as ViewEncapsulation));\n    }\n\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n\n    throw new Error('No deserializer for ' + type.toString());\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\nprivate _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin\n    };\n  }\n/**\n * @param {?} loc\n * @return {?}\n */\nprivate _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _serializeRenderComponentType(obj: RenderComponentType): Object {\n    return {\n      'id': obj.id,\n      'templateUrl': obj.templateUrl,\n      'slotCount': obj.slotCount,\n      'encapsulation': this.serialize(obj.encapsulation, ViewEncapsulation),\n      'styles': this.serialize(obj.styles, PRIMITIVE)\n    };\n  }\n/**\n * @param {?} map\n * @return {?}\n */\nprivate _deserializeRenderComponentType(map: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        map['id'], map['templateUrl'], map['slotCount'],\n        this.deserialize(map['encapsulation'], ViewEncapsulation),\n        this.deserialize(map['styles'], PRIMITIVE), {});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RenderStore, },\n];\n}\n\nfunction Serializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSerializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSerializer.ctorParameters;\n/** @type {?} */\nSerializer.prototype._renderStore;\n}\n\n\nexport const /** @type {?} */ ANIMATION_WORKER_PLAYER_PREFIX = 'AnimationPlayer.';\nexport class RenderStoreObject {}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}