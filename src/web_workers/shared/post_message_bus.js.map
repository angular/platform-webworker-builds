{"version":3,"file":"post_message_bus.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/shared/post_message_bus.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone} from '@angular/core';\n\nimport {EventEmitter} from '../../facade/async';\n\nimport {MessageBus, MessageBusSink, MessageBusSource} from './message_bus';\n\n\n\n// TODO(jteplitz602) Replace this with the definition in lib.webworker.d.ts(#3492)\nexport interface PostMessageTarget {\n  postMessage: (message: any, transfer?: [ArrayBuffer]) => void;\n}\n\nexport class PostMessageBusSink implements MessageBusSink {\nprivate _zone: NgZone;\nprivate _channels: {[key: string]: _Channel} = {};\nprivate _messageBuffer: Array<Object> = [];\n/**\n * @param {?} _postMessageTarget\n */\nconstructor(private _postMessageTarget: PostMessageTarget) {}\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone): void {\n    this._zone = zone;\n    this._zone.runOutsideAngular(\n        () => { this._zone.onStable.subscribe({next: () => { this._handleOnEventDone(); }}); });\n  }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true): void {\n    if (this._channels.hasOwnProperty(channel)) {\n      throw new Error(`${channel} has already been initialized`);\n    }\n\n    const /** @type {?} */ emitter = new EventEmitter(false);\n    const /** @type {?} */ channelInfo = new _Channel(emitter, runInZone);\n    this._channels[channel] = channelInfo;\n    emitter.subscribe((data: Object) => {\n      const /** @type {?} */ message = {channel: channel, message: data};\n      if (runInZone) {\n        this._messageBuffer.push(message);\n      } else {\n        this._sendMessages([message]);\n      }\n    });\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nto(channel: string): EventEmitter<any> {\n    if (this._channels.hasOwnProperty(channel)) {\n      return this._channels[channel].emitter;\n    } else {\n      throw new Error(`${channel} is not set up. Did you forget to call initChannel?`);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _handleOnEventDone() {\n    if (this._messageBuffer.length > 0) {\n      this._sendMessages(this._messageBuffer);\n      this._messageBuffer = [];\n    }\n  }\n/**\n * @param {?} messages\n * @return {?}\n */\nprivate _sendMessages(messages: Array<Object>) { this._postMessageTarget.postMessage(messages); }\n}\n\nfunction PostMessageBusSink_tsickle_Closure_declarations() {\n /** @type {?} */\nPostMessageBusSink.prototype._zone;\n /** @type {?} */\nPostMessageBusSink.prototype._channels;\n /** @type {?} */\nPostMessageBusSink.prototype._messageBuffer;\n /** @type {?} */\nPostMessageBusSink.prototype._postMessageTarget;\n}\n\n\nexport class PostMessageBusSource implements MessageBusSource {\nprivate _zone: NgZone;\nprivate _channels: {[key: string]: _Channel} = {};\n/**\n * @param {?=} eventTarget\n */\nconstructor(eventTarget?: EventTarget) {\n    if (eventTarget) {\n      eventTarget.addEventListener('message', (ev: MessageEvent) => this._handleMessages(ev));\n    } else {\n      // if no eventTarget is given we assume we're in a WebWorker and listen on the global scope\n      const workerScope = <EventTarget>self;\n      workerScope.addEventListener('message', (ev: MessageEvent) => this._handleMessages(ev));\n    }\n  }\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone) { this._zone = zone; }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true) {\n    if (this._channels.hasOwnProperty(channel)) {\n      throw new Error(`${channel} has already been initialized`);\n    }\n\n    const /** @type {?} */ emitter = new EventEmitter(false);\n    const /** @type {?} */ channelInfo = new _Channel(emitter, runInZone);\n    this._channels[channel] = channelInfo;\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nfrom(channel: string): EventEmitter<any> {\n    if (this._channels.hasOwnProperty(channel)) {\n      return this._channels[channel].emitter;\n    } else {\n      throw new Error(`${channel} is not set up. Did you forget to call initChannel?`);\n    }\n  }\n/**\n * @param {?} ev\n * @return {?}\n */\nprivate _handleMessages(ev: MessageEvent): void {\n    const /** @type {?} */ messages = ev.data;\n    for (let /** @type {?} */ i = 0; i < messages.length; i++) {\n      this._handleMessage(messages[i]);\n    }\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate _handleMessage(data: any): void {\n    const /** @type {?} */ channel = data.channel;\n    if (this._channels.hasOwnProperty(channel)) {\n      const /** @type {?} */ channelInfo = this._channels[channel];\n      if (channelInfo.runInZone) {\n        this._zone.run(() => { channelInfo.emitter.emit(data.message); });\n      } else {\n        channelInfo.emitter.emit(data.message);\n      }\n    }\n  }\n}\n\nfunction PostMessageBusSource_tsickle_Closure_declarations() {\n /** @type {?} */\nPostMessageBusSource.prototype._zone;\n /** @type {?} */\nPostMessageBusSource.prototype._channels;\n}\n\n/**\n *  A TypeScript implementation of {@link MessageBus} for communicating via JavaScript's\n  * postMessage API.\n */\nexport class PostMessageBus implements MessageBus {\n/**\n * @param {?} sink\n * @param {?} source\n */\nconstructor(public sink: PostMessageBusSink,\npublic source: PostMessageBusSource) {}\n/**\n * @param {?} zone\n * @return {?}\n */\nattachToZone(zone: NgZone): void {\n    this.source.attachToZone(zone);\n    this.sink.attachToZone(zone);\n  }\n/**\n * @param {?} channel\n * @param {?=} runInZone\n * @return {?}\n */\ninitChannel(channel: string, runInZone: boolean = true): void {\n    this.source.initChannel(channel, runInZone);\n    this.sink.initChannel(channel, runInZone);\n  }\n/**\n * @param {?} channel\n * @return {?}\n */\nfrom(channel: string): EventEmitter<any> { return this.source.from(channel); }\n/**\n * @param {?} channel\n * @return {?}\n */\nto(channel: string): EventEmitter<any> { return this.sink.to(channel); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PostMessageBusSink, },\n{type: PostMessageBusSource, },\n];\n}\n\nfunction PostMessageBus_tsickle_Closure_declarations() {\n /** @type {?} */\nPostMessageBus.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nPostMessageBus.ctorParameters;\n /** @type {?} */\nPostMessageBus.prototype.sink;\n /** @type {?} */\nPostMessageBus.prototype.source;\n}\n\n/**\n *  Helper class that wraps a channel's {@link EventEmitter} and\n  * keeps track of if it should run in the zone.\n */\nclass _Channel {\n/**\n * @param {?} emitter\n * @param {?} runInZone\n */\nconstructor(public emitter: EventEmitter<any>,\npublic runInZone: boolean) {}\n}\n\nfunction _Channel_tsickle_Closure_declarations() {\n /** @type {?} */\n_Channel.prototype.emitter;\n /** @type {?} */\n_Channel.prototype.runInZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}