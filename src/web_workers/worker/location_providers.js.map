{"version":3,"sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/worker/location_providers.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,oBAAE,EAAqB,gBAAA,EAAiB,MAAA,uBAAA,CAAA;AAC/C,OAAO,EAAA,eAAE,EAAgC,MAAA,EAAO,MAAA,qBAAA,CAAA;AAEhD,OAAO,EAAA,yBAAE,EAAyB,MAAA,qBAAA,CAAA;AAGlC;;;;GAIG;AACH,MAAM,CAAC,MAAA,gBAAA,CAAM,6BAAA,GAAgC;IAC3C,EAAC,OAAC,EAAQ,gBAAA,EAAkB,QAAA,EAAU,yBAAA,EAA0B;IAChE;QACE,OAAO,EAAE,eAAA;QACT,UAAU,EAAE,gBAAA;QACZ,KAAK,EAAE,IAAA;QACP,IAAI,EAAE,CAAA,gBAAE,EAAiB,MAAA,CAAO;KACjC;IACD;QACE,OAAO,EAAE,oBAAA;QACT,UAAU,EAAE,mBAAA;QACZ,IAAI,EAAE,CAAA,gBAAE,CAAgB;KACzB;CACF,CAAC;AACF;;;GAGG;AACH,MAHC,8BAAA,gBAAA;IAIC,MAAM,CAHC,gBAAA,CAAiB,WAAC,CAAW;AAItC,CAAC;AACD;;;;GAIG;AACH,MAPC,2BAAA,gBAAA,EAAA,IAAA;IASC,MAAM,CAPC,MAAM,IAAA,CAAK,UAAC,CAAU,MAAM,gBAAA,CAAiB,IAAC,EAAI,CAAE,CAAC;AAQ9D,CAAC","file":"location_providers.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LOCATION_INITIALIZED, PlatformLocation} from '@angular/common/index';\nimport {APP_INITIALIZER, InjectionToken, NgZone} from '@angular/core/index';\n\nimport {WebWorkerPlatformLocation} from './platform_location';\n\n\n/**\n * Those providers should be added when the router is used in a worker context in addition to the\n * {@link ROUTER_PROVIDERS} and after them.\n * @experimental\n */\nexport const /** @type {?} */ WORKER_APP_LOCATION_PROVIDERS = [\n  {provide: PlatformLocation, useClass: WebWorkerPlatformLocation},\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitFnFactory,\n    multi: true,\n    deps: [PlatformLocation, NgZone],\n  },\n  {\n    provide: LOCATION_INITIALIZED,\n    useFactory: locationInitialized,\n    deps: [PlatformLocation],\n  },\n];\n/**\n * @param {?} platformLocation\n * @return {?}\n */\nexport function locationInitialized(platformLocation: WebWorkerPlatformLocation) {\n  return platformLocation.initialized;\n}\n/**\n * @param {?} platformLocation\n * @param {?} zone\n * @return {?}\n */\nexport function appInitFnFactory(platformLocation: WebWorkerPlatformLocation, zone: NgZone): () =>\n    Promise<boolean> {\n  return () => zone.runGuarded(() => platformLocation.init());\n}\n"]}