{"version":3,"file":"location_providers.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-webworker/src/web_workers/worker/location_providers.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,oBAAoB,EAAE,gBAAgB,EAAC,MAAM,iBAAiB;OAC/D,EAAC,eAAe,EAAE,MAAM,EAAc,MAAM,eAAe;OAE3D,EAAC,yBAAyB,EAAC,MAAM,qBAAqB;AAG7D;;;;GAIG;AACH,OAAO,IAAM,gBAAgB,CAAC,6BAA6B,GAAG;IAC5D,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,yBAAyB,EAAC,EAAE;QAChE,OAAO,EAAE,eAAe;QACxB,UAAU,EAAE,gBAAgB;QAC5B,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,CAAC,gBAAgB,EAAE,MAAM,CAAC;KACjC;IACD,EAAC,OAAO,EAAE,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,gBAAgB,CAAC,EAAC;CAC3F,CAAC;AACF;;;GAGG;AACH,oCAAoC,gBAA2C;IAC7E,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC;AACtC,CAAC;AACD;;;;GAIG;AACH,iCAAiC,gBAA2C,EAAE,IAAY;IAExF,MAAM,CAAC,cAAM,OAAA,IAAI,CAAC,UAAU,CAAC,cAAM,OAAA,gBAAgB,CAAC,IAAI,EAAE,EAAvB,CAAuB,CAAC,EAA9C,CAA8C,CAAC;AAC9D,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LOCATION_INITIALIZED, PlatformLocation} from '@angular/common';\nimport {APP_INITIALIZER, NgZone, OpaqueToken} from '@angular/core';\n\nimport {WebWorkerPlatformLocation} from './platform_location';\n\n\n/**\n * Those providers should be added when the router is used in a worker context in addition to the\n * {@link ROUTER_PROVIDERS} and after them.\n * @experimental\n */\nexport const /** @type {?} */ WORKER_APP_LOCATION_PROVIDERS = [\n  {provide: PlatformLocation, useClass: WebWorkerPlatformLocation}, {\n    provide: APP_INITIALIZER,\n    useFactory: appInitFnFactory,\n    multi: true,\n    deps: [PlatformLocation, NgZone]\n  },\n  {provide: LOCATION_INITIALIZED, useFactory: locationInitialized, deps: [PlatformLocation]}\n];\n/**\n * @param {?} platformLocation\n * @return {?}\n */\nexport function locationInitialized(platformLocation: WebWorkerPlatformLocation) {\n  return platformLocation.initialized;\n}\n/**\n * @param {?} platformLocation\n * @param {?} zone\n * @return {?}\n */\nexport function appInitFnFactory(platformLocation: WebWorkerPlatformLocation, zone: NgZone): () =>\n    Promise<boolean> {\n  return () => zone.runGuarded(() => platformLocation.init());\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}