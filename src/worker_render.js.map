{"version":3,"sources":["../../../../modules/@angular/platform-webworker/src/worker_render.ts"],"names":[],"mappings":"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","file":"worker_render.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ErrorHandler, Injectable, InjectionToken, Injector, NgZone, PLATFORM_INITIALIZER, PlatformRef, Provider, RootRenderer, Testability, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\nimport {AnimationDriver, DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nimport {APP_ID_RANDOM_PROVIDER} from './private_import_core';\nimport {BROWSER_SANITIZATION_PROVIDERS, BrowserDomAdapter, BrowserGetTestability, DomEventsPlugin, DomRootRenderer, DomRootRenderer_, DomSharedStylesHost, HammerGesturesPlugin, KeyEventsPlugin, SharedStylesHost, WebAnimationsDriver, getDOM} from './private_import_platform-browser';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer} from './web_workers/ui/renderer';\n/**\n * Wrapper class that exposes the Worker\n * and underlying {\\@link MessageBus} for lower level message passing.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport class WebWorkerInstance {\npublic worker: Worker;\npublic bus: MessageBus;\n/**\n * \\@internal\n * @param {?} worker\n * @param {?} bus\n * @return {?}\n */\npublic init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebWorkerInstance_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerInstance.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerInstance.ctorParameters;\n/** @type {?} */\nWebWorkerInstance.prototype.worker;\n/** @type {?} */\nWebWorkerInstance.prototype.bus;\n}\n\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_SCRIPT = new InjectionToken<string>('WebWorkerScript');\n\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n *\n * TODO(vicb): create an interface for startable services to implement\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new InjectionToken<MessageBasedRenderer[]>('WorkerRenderStartableMsgService');\n\nexport const /** @type {?} */ _WORKER_UI_PLATFORM_PROVIDERS: Provider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  MessageBasedRenderer,\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n  {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver, deps: []},\n  Serializer,\n  {provide: ON_WEB_WORKER, useValue: false},\n  RenderStore,\n  DomSharedStylesHost,\n  Testability,\n  EventManager,\n  WebWorkerInstance,\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]}\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const /** @type {?} */ bus = injector.get(MessageBus);\n  const /** @type {?} */ zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const /** @type {?} */ services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let /** @type {?} */ scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch ( /** @type {?} */e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const /** @type {?} */ instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document(): any {\n  return document;\n}\n/**\n * @return {?}\n */\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n * @param {?} uri\n * @param {?} instance\n * @return {?}\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const /** @type {?} */ webWorker: Worker = new Worker(uri);\n  const /** @type {?} */ sink = new PostMessageBusSink(webWorker);\n  const /** @type {?} */ source = new PostMessageBusSource(webWorker);\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n/**\n * @return {?}\n */\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return AnimationDriver.NOOP;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}