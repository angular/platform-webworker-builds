{"version":3,"sources":["../../../../modules/@angular/platform-webworker/src/worker_render.ts"],"names":[],"mappings":"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","file":"worker_render.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ErrorHandler, Injectable, InjectionToken, Injector, NgZone, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactoryV2, RootRenderer, Testability, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\nimport {AnimationDriver, DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nimport {APP_ID_RANDOM_PROVIDER} from './private_import_core';\nimport {BROWSER_SANITIZATION_PROVIDERS, BrowserDomAdapter, BrowserGetTestability, DomEventsPlugin, DomRendererFactoryV2, DomRootRenderer, DomRootRenderer_, DomSharedStylesHost, HammerGesturesPlugin, KeyEventsPlugin, SharedStylesHost, WebAnimationsDriver, getDOM} from './private_import_platform-browser';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer} from './web_workers/ui/renderer';\n/**\n * Wrapper class that exposes the Worker\n * and underlying {\\@link MessageBus} for lower level message passing.\n * \n * \\@experimental WebWorker support is currently experimental.\n */\nexport class WebWorkerInstance {\npublic worker: Worker;\npublic bus: MessageBus;\n/**\n * \\@internal\n * @param {?} worker\n * @param {?} bus\n * @return {?}\n */\npublic init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebWorkerInstance_tsickle_Closure_declarations() {\n/** @type {?} */\nWebWorkerInstance.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWebWorkerInstance.ctorParameters;\n/** @type {?} */\nWebWorkerInstance.prototype.worker;\n/** @type {?} */\nWebWorkerInstance.prototype.bus;\n}\n\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_SCRIPT = new InjectionToken<string>('WebWorkerScript');\n\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n *\n * TODO(vicb): create an interface for startable services to implement\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new InjectionToken<MessageBasedRenderer[]>('WorkerRenderStartableMsgService');\n\nexport const /** @type {?} */ _WORKER_UI_PLATFORM_PROVIDERS: Provider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  MessageBasedRenderer,\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  DomRendererFactoryV2,\n  {provide: RendererFactoryV2, useExisting: DomRendererFactoryV2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n  {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver, deps: []},\n  Serializer,\n  {provide: ON_WEB_WORKER, useValue: false},\n  RenderStore,\n  DomSharedStylesHost,\n  Testability,\n  EventManager,\n  WebWorkerInstance,\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]},\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const /** @type {?} */ bus = injector.get(MessageBus);\n  const /** @type {?} */ zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const /** @type {?} */ services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let /** @type {?} */ scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch ( /** @type {?} */e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const /** @type {?} */ instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document(): any {\n  return document;\n}\n/**\n * @return {?}\n */\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n * @param {?} uri\n * @param {?} instance\n * @return {?}\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const /** @type {?} */ webWorker: Worker = new Worker(uri);\n  const /** @type {?} */ sink = new PostMessageBusSink(webWorker);\n  const /** @type {?} */ source = new PostMessageBusSource(webWorker);\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n/**\n * @return {?}\n */\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  return getDOM().supportsWebAnimation() ? new WebAnimationsDriver() : AnimationDriver.NOOP;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}