{"version":3,"file":"worker_render.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-webworker/src/worker_render.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ErrorHandler, Injectable, Injector, NgZone, OpaqueToken, PLATFORM_INITIALIZER, PlatformRef, Provider, RootRenderer, Testability, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\nimport {AnimationDriver, DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nimport {APP_ID_RANDOM_PROVIDER} from './private_import_core';\nimport {BROWSER_SANITIZATION_PROVIDERS, BrowserDomAdapter, BrowserGetTestability, DomEventsPlugin, DomRootRenderer, DomRootRenderer_, DomSharedStylesHost, HammerGesturesPlugin, KeyEventsPlugin, SharedStylesHost, WebAnimationsDriver, getDOM} from './private_import_platform-browser';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer} from './web_workers/ui/renderer';\n/**\n *  Wrapper class that exposes the Worker\n  * and underlying {@link MessageBus} for lower level message passing.\n  * *\n */\nexport class WebWorkerInstance {\npublic worker: Worker;\npublic bus: MessageBus;\n/**\n * @param {?} worker\n * @param {?} bus\n * @return {?}\n */\npublic init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WebWorkerInstance_tsickle_Closure_declarations() {\n /** @type {?} */\nWebWorkerInstance.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nWebWorkerInstance.ctorParameters;\n /** @type {?} */\nWebWorkerInstance.prototype.worker;\n /** @type {?} */\nWebWorkerInstance.prototype.bus;\n}\n\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_SCRIPT: OpaqueToken = new OpaqueToken('WebWorkerScript');\n\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n *\n * TODO(vicb): create an interface for startable services to implement\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new OpaqueToken('WorkerRenderStartableMsgService');\n\nexport const /** @type {?} */ _WORKER_UI_PLATFORM_PROVIDERS: Provider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  MessageBasedRenderer,\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n  {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver, deps: []},\n  Serializer,\n  {provide: ON_WEB_WORKER, useValue: false},\n  RenderStore,\n  DomSharedStylesHost,\n  Testability,\n  EventManager,\n  WebWorkerInstance,\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]}\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const /** @type {?} */ bus = injector.get(MessageBus);\n  const /** @type {?} */ zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const /** @type {?} */ services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let /** @type {?} */ scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch ( /** @type {?} */e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const /** @type {?} */ instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const /** @type {?} */ platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n/**\n * @return {?}\n */\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n/**\n *  Spawns a new class and initializes the WebWorkerInstance\n * @param {?} uri\n * @param {?} instance\n * @return {?}\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const /** @type {?} */ webWorker: Worker = new Worker(uri);\n  const /** @type {?} */ sink = new PostMessageBusSink(webWorker);\n  const /** @type {?} */ source = new PostMessageBusSource(webWorker);\n  const /** @type {?} */ bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n/**\n * @return {?}\n */\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return AnimationDriver.NOOP;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}