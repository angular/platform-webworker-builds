{"version":3,"file":"worker_render.js","sourceRoot":"","sources":["../../../../../packages/platform-webworker/src/worker_render.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAe,sBAAsB,IAAI,qBAAqB,EAAC,MAAM,iBAAiB,CAAC;AAC9F,OAAO,EAAC,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAe,gBAAgB,EAAgC,WAAW,EAAE,qBAAqB,EAAE,SAAS,EAAE,YAAY,EAAE,uBAAuB,IAAI,sBAAsB,EAAC,MAAM,eAAe,CAAC;AACzS,OAAO,EAAC,QAAQ,EAAE,qBAAqB,EAAE,YAAY,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,+BAA+B,IAAI,8BAA8B,EAAE,kBAAkB,IAAI,iBAAiB,EAAE,sBAAsB,IAAI,qBAAqB,EAAE,gBAAgB,IAAI,eAAe,EAAE,oBAAoB,IAAI,mBAAmB,EAAE,oBAAoB,IAAI,mBAAmB,EAAE,qBAAqB,IAAI,oBAAoB,EAAE,gBAAgB,IAAI,eAAe,EAAE,iBAAiB,IAAI,gBAAgB,EAAoB,MAAM,2BAA2B,CAAC;AAE9iB,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAC,0BAA0B,EAAC,MAAM,4CAA4C,CAAC;AACtF,OAAO,EAAC,UAAU,EAAC,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAC,cAAc,EAAE,kBAAkB,EAAE,oBAAoB,EAAC,MAAM,uCAAuC,CAAC;AAC/G,OAAO,EAAC,WAAW,EAAC,MAAM,mCAAmC,CAAC;AAC9D,OAAO,EAAC,UAAU,EAAC,MAAM,iCAAiC,CAAC;AAC3D,OAAO,EAAC,2BAA2B,EAAC,MAAM,6CAA6C,CAAC;AACxF,OAAO,EAAC,qBAAqB,EAAC,MAAM,2BAA2B,CAAC;;;;;;;;;;;;;;;;IAgBvD,gCAAI;;;;;;cAAC,MAAc,EAAE,GAAe;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;;gBARlB,UAAU;;;;4BA7BX;;SA8Ba,iBAAiB;;;;;;;;;;;;;;;;;AAc9B,MAAM,CAAC,qBAAM,aAAa,GAAG,IAAI,cAAc,CAAS,iBAAiB,CAAC,CAAC;;;;;;;AAQ3E,MAAM,CAAC,qBAAM,qCAAqC,GAC9C,IAAI,cAAc,CAA0B,iCAAiC,CAAC,CAAC;AAEnF,MAAM,CAAC,qBAAM,6BAA6B,GAAqB;IAC7D,EAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,EAAE,EAAC;IACrD;QACE,OAAO,EAAE,qBAAqB;QAC9B,IAAI,EAAE,CAAC,2BAA2B,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,CAAC;KAC3F;IACD,EAAC,OAAO,EAAE,qCAAqC,EAAE,WAAW,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAC;IACjG,8BAA8B;IAC9B,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAC;IAChE,EAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAC;;;IAGpD;QACE,OAAO,EAAE,qBAAqB;QAC9B,QAAQ,EAAE,eAAe;QACzB,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;QACxB,KAAK,EAAE,IAAI;KACZ;IACD,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC;IAC1F;QACE,OAAO,EAAE,qBAAqB;QAC9B,QAAQ,EAAE,oBAAoB;QAC9B,IAAI,EAAE,CAAC,QAAQ,EAAE,qBAAqB,CAAC;QACvC,KAAK,EAAE,IAAI;KACZ;IACD,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAC;IACzE,sBAAsB;IACtB,EAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC,EAAC;IACzE,EAAC,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,mBAAmB,EAAC;IAC7D,EAAC,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,mBAAmB,EAAC;IAC7D;QACE,OAAO,EAAE,2BAA2B;QACpC,QAAQ,EAAE,2BAA2B;QACrC,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;KAC/B;IACD;QACE,OAAO,EAAE,0BAA0B;QACnC,QAAQ,EAAE,0BAA0B;QACpC,IAAI,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;KAC/B;IACD,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,WAAW,CAAC,EAAC;IAC1C,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC;IACzC,EAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,EAAC;IAChC,EAAC,OAAO,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAC;IAChD,EAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAC;IACtC,EAAC,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,qBAAqB,EAAE,MAAM,CAAC,EAAC;IAC9D,EAAC,OAAO,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAC;IACtC;QACE,OAAO,EAAE,oBAAoB;QAC7B,UAAU,EAAE,2BAA2B;QACvC,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,CAAC,QAAQ,CAAC;KACjB;IACD,EAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,qBAAqB,EAAC;IACvD,EAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,iBAAiB,CAAC,EAAC;CAChF,CAAC;;;;;AAEF,yCAAyC,QAAkB;IACzD,qBAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACrC,qBAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAS,MAAM,CAAC,CAAC;IAC1C,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;IAGvB,qBAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACrE,IAAI,CAAC,UAAU,CAAC,cAAQ,QAAQ,CAAC,OAAO,CAAC,UAAC,GAAQ,IAAO,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CAC9E;;;;;AAED,2BAA2B,QAA2B;IACpD,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC;CACrB;;;;;AAED,qCAAqC,QAAkB;IACrD,MAAM,CAAC;QACL,iBAAiB,CAAC,WAAW,EAAE,CAAC;QAChC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAC7B,qBAAI,SAAiB,CAAC;QACtB,IAAI,CAAC;YACH,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SACzC;QAAC,KAAK,CAAC,CAAC,iBAAA,CAAC,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CACX,uFAAuF,CAAC,CAAC;SAC9F;QAED,qBAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACjD,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEpC,+BAA+B,CAAC,QAAQ,CAAC,CAAC;KAC3C,CAAC;CACH;;;;AAKD,MAAM,CAAC,qBAAM,gBAAgB,GACzB,qBAAqB,CAAC,YAAY,EAAE,UAAU,EAAE,6BAA6B,CAAC,CAAC;;;;AAEnF;IACE,MAAM,CAAC,IAAI,YAAY,EAAE,CAAC;CAC3B;;;;AAED;IACE,MAAM,CAAC,QAAQ,CAAC;CACjB;;;;AAED;IACE,MAAM,CAAC,IAAI,MAAM,CAAC,EAAC,oBAAoB,EAAE,SAAS,EAAE,EAAC,CAAC,CAAC;CACxD;;;;;;;AAKD,wBAAwB,GAAW,EAAE,QAA2B;IAC9D,qBAAM,SAAS,GAAW,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1C,qBAAM,IAAI,GAAG,IAAI,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC/C,qBAAM,MAAM,GAAG,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACnD,qBAAM,GAAG,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAE7C,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;CAC/B","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, ɵPLATFORM_WORKER_UI_ID as PLATFORM_WORKER_UI_ID} from '@angular/common';\nimport {ErrorHandler, Injectable, InjectionToken, Injector, NgZone, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, RendererFactory2, RootRenderer, StaticProvider, Testability, createPlatformFactory, isDevMode, platformCore, ɵAPP_ID_RANDOM_PROVIDER as APP_ID_RANDOM_PROVIDER} from '@angular/core';\nimport {DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HammerGestureConfig, ɵBROWSER_SANITIZATION_PROVIDERS as BROWSER_SANITIZATION_PROVIDERS, ɵBrowserDomAdapter as BrowserDomAdapter, ɵBrowserGetTestability as BrowserGetTestability, ɵDomEventsPlugin as DomEventsPlugin, ɵDomRendererFactory2 as DomRendererFactory2, ɵDomSharedStylesHost as DomSharedStylesHost, ɵHammerGesturesPlugin as HammerGesturesPlugin, ɵKeyEventsPlugin as KeyEventsPlugin, ɵSharedStylesHost as SharedStylesHost, ɵgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer2} from './web_workers/ui/renderer';\n\n\n\n/**\n * Wrapper class that exposes the Worker\n * and underlying {@link MessageBus} for lower level message passing.\n *\n * @experimental WebWorker support is currently experimental.\n */\n@Injectable()\nexport class WebWorkerInstance {\n  public worker: Worker;\n  public bus: MessageBus;\n\n  /** @internal */\n  public init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\n}\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const WORKER_SCRIPT = new InjectionToken<string>('WebWorkerScript');\n\n/**\n * A multi-provider used to automatically call the `start()` method after the service is\n * created.\n *\n * @experimental WebWorker support is currently experimental.\n */\nexport const WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new InjectionToken<({start: () => void})[]>('WorkerRenderStartableMsgService');\n\nexport const _WORKER_UI_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: NgZone, useFactory: createNgZone, deps: []},\n  {\n    provide: MessageBasedRenderer2,\n    deps: [ServiceMessageBrokerFactory, MessageBus, Serializer, RenderStore, RendererFactory2]\n  },\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer2, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ErrorHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    deps: [DOCUMENT, NgZone],\n    multi: true\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, deps: [DOCUMENT], multi: true},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG],\n    multi: true\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: DomRendererFactory2, deps: [EventManager, DomSharedStylesHost]},\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {\n    provide: ServiceMessageBrokerFactory,\n    useClass: ServiceMessageBrokerFactory,\n    deps: [MessageBus, Serializer]\n  },\n  {\n    provide: ClientMessageBrokerFactory,\n    useClass: ClientMessageBrokerFactory,\n    deps: [MessageBus, Serializer]\n  },\n  {provide: Serializer, deps: [RenderStore]},\n  {provide: ON_WEB_WORKER, useValue: false},\n  {provide: RenderStore, deps: []},\n  {provide: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, deps: [NgZone]},\n  {provide: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  {provide: WebWorkerInstance, deps: []},\n  {\n    provide: PLATFORM_INITIALIZER,\n    useFactory: initWebWorkerRenderPlatform,\n    multi: true,\n    deps: [Injector]\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_WORKER_UI_ID},\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]},\n];\n\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  const bus = injector.get(MessageBus);\n  const zone = injector.get<NgZone>(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  const services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any) => { svc.start(); }); });\n}\n\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n\nfunction initWebWorkerRenderPlatform(injector: Injector): () => void {\n  return () => {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n    let scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch (e) {\n      throw new Error(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    const instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n\n/**\n * @experimental WebWorker support is currently experimental.\n */\nexport const platformWorkerUi =\n    createPlatformFactory(platformCore, 'workerUi', _WORKER_UI_PLATFORM_PROVIDERS);\n\nfunction _exceptionHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nfunction _document(): any {\n  return document;\n}\n\nfunction createNgZone(): NgZone {\n  return new NgZone({enableLongStackTrace: isDevMode()});\n}\n\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  const webWorker: Worker = new Worker(uri);\n  const sink = new PostMessageBusSink(webWorker);\n  const source = new PostMessageBusSource(webWorker);\n  const bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n"]}