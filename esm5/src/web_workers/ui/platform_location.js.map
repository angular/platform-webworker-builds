{"version":3,"file":"platform_location.js","sourceRoot":"","sources":["../../../../../../../packages/platform-webworker/src/web_workers/ui/platform_location.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeListener} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {ÉµBrowserPlatformLocation as BrowserPlatformLocation} from '@angular/platform-browser';\nimport {MessageBus} from '../shared/message_bus';\nimport {ROUTER_CHANNEL} from '../shared/messaging_api';\nimport {LocationType, Serializer, SerializerTypes} from '../shared/serializer';\nimport {ServiceMessageBroker, ServiceMessageBrokerFactory} from '../shared/service_message_broker';\n\n@Injectable()\nexport class MessageBasedPlatformLocation {\n  private _channelSink: EventEmitter<Object>;\n  private _broker: ServiceMessageBroker;\n\n  constructor(\n      private _brokerFactory: ServiceMessageBrokerFactory,\n      private _platformLocation: BrowserPlatformLocation, bus: MessageBus,\n      private _serializer: Serializer) {\n    this._platformLocation.onPopState(<LocationChangeListener>this._sendUrlChangeEvent.bind(this));\n    this._platformLocation.onHashChange(\n        <LocationChangeListener>this._sendUrlChangeEvent.bind(this));\n    this._broker = this._brokerFactory.createMessageBroker(ROUTER_CHANNEL);\n    this._channelSink = bus.to(ROUTER_CHANNEL);\n  }\n\n  start(): void {\n    const P = SerializerTypes.PRIMITIVE;\n\n    this._broker.registerMethod('getLocation', null, this._getLocation.bind(this), LocationType);\n    this._broker.registerMethod('setPathname', [P], this._setPathname.bind(this));\n    this._broker.registerMethod(\n        'pushState', [P, P, P], this._platformLocation.pushState.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'replaceState', [P, P, P],\n        this._platformLocation.replaceState.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'forward', null, this._platformLocation.forward.bind(this._platformLocation));\n    this._broker.registerMethod(\n        'back', null, this._platformLocation.back.bind(this._platformLocation));\n  }\n\n  private _getLocation(): Promise<Location> {\n    return Promise.resolve(this._platformLocation.location);\n  }\n\n  private _sendUrlChangeEvent(e: Event): void {\n    this._channelSink.emit({\n      'event': {'type': e.type},\n      'location': this._serializer.serialize(this._platformLocation.location, LocationType),\n    });\n  }\n\n  private _setPathname(pathname: string): void { this._platformLocation.pathname = pathname; }\n}\n"]}