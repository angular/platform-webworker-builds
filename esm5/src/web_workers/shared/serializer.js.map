{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../../../../../packages/platform-webworker/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, RenderComponentType, RendererType2, Type, Éµstringify as stringify} from '@angular/core';\nimport {RenderStore} from './render_store';\n\n\n/**\n * @experimental WebWorker support in Angular is currently experimental.\n */\nexport const enum SerializerTypes {\n  // RendererType2\n  RENDERER_TYPE_2,\n  // Primitive types\n  PRIMITIVE,\n  // An object stored in a RenderStore\n  RENDER_STORE_OBJECT,\n}\n\nexport class LocationType {\n  constructor(\n      public href: string, public protocol: string, public host: string, public hostname: string,\n      public port: string, public pathname: string|null, public search: string, public hash: string,\n      public origin: string) {}\n}\n\n@Injectable()\nexport class Serializer {\n  constructor(private _renderStore: RenderStore) {}\n\n  serialize(obj: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE): Object {\n    if (obj == null || type === SerializerTypes.PRIMITIVE) {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map(v => this.serialize(v, type));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return this._renderStore.serialize(obj) !;\n    }\n    if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._serializeRendererType2(obj);\n    }\n    if (type === LocationType) {\n      return this._serializeLocation(obj);\n    }\n    throw new Error(`No serializer for type ${stringify(type)}`);\n  }\n\n  deserialize(map: any, type: Type<any>|SerializerTypes = SerializerTypes.PRIMITIVE, data?: any):\n      any {\n    if (map == null || type === SerializerTypes.PRIMITIVE) {\n      return map;\n    }\n    if (Array.isArray(map)) {\n      return map.map(val => this.deserialize(val, type, data));\n    }\n    if (type === SerializerTypes.RENDER_STORE_OBJECT) {\n      return this._renderStore.deserialize(map);\n    }\n    if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    }\n    if (type === SerializerTypes.RENDERER_TYPE_2) {\n      return this._deserializeRendererType2(map);\n    }\n    if (type === LocationType) {\n      return this._deserializeLocation(map);\n    }\n    throw new Error(`No deserializer for type ${stringify(type)}`);\n  }\n\n  private _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin,\n    };\n  }\n\n  private _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n\n  private _serializeRenderComponentType(type: RenderComponentType): Object {\n    return {\n      'id': type.id,\n      'templateUrl': type.templateUrl,\n      'slotCount': type.slotCount,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n    };\n  }\n\n  private _deserializeRenderComponentType(props: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        props['id'], props['templateUrl'], props['slotCount'],\n        this.deserialize(props['encapsulation']), this.deserialize(props['styles']), {});\n  }\n\n  private _serializeRendererType2(type: RendererType2): {[key: string]: any} {\n    return {\n      'id': type.id,\n      'encapsulation': this.serialize(type.encapsulation),\n      'styles': this.serialize(type.styles),\n      'data': this.serialize(type.data),\n    };\n  }\n\n  private _deserializeRendererType2(props: {[key: string]: any}): RendererType2 {\n    return {\n      id: props['id'],\n      encapsulation: props['encapsulation'],\n      styles: this.deserialize(props['styles']),\n      data: this.deserialize(props['data'])\n    };\n  }\n}\n"]}