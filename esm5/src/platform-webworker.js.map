{"version":3,"file":"platform-webworker.js","sourceRoot":"","sources":["../../../../../packages/platform-webworker/src/platform-webworker.ts"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAO,EAAC,aAAa,EAAE,gBAAgB,EAAC,MAAM,iBAAiB,CAAC;AAEhE,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAClC,OAAO,EAAC,mBAAmB,EAAE,0BAA0B,EAAE,KAAK,EAAE,WAAW,EAAC,MAAM,4CAA4C,CAAC;AAC/H,OAAO,EAAC,UAAU,EAAmC,MAAM,kCAAkC,CAAC;AAE9F,OAAO,EAAkB,oBAAoB,EAAE,2BAA2B,EAAC,MAAM,6CAA6C,CAAC;AAC/H,OAAO,EAAC,4BAA4B,EAAC,MAAM,qCAAqC,CAAC;AACjF,OAAO,EAAC,6BAA6B,EAAC,MAAM,yCAAyC,CAAC;AACtF,OAAO,EAAC,eAAe,EAAE,iBAAiB,EAAC,MAAM,cAAc,CAAC;AAChE,OAAO,EAAC,gBAAgB,EAAC,MAAM,iBAAiB,CAAC;;;;;;;;;AAOjD,MAAM,4BACF,eAAuB,EAAE,eAAsC;IAAtC,gCAAA,EAAA,oBAAsC;;IAEjE,qBAAM,QAAQ,GAAG,gBAAgB;QAC/B,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,eAAe,EAAC;aAChD,eAAe,EAClB,CAAC;IAEH,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;CAClC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, StaticProvider} from '@angular/core';\n\nimport {WORKER_SCRIPT, platformWorkerUi} from './worker_render';\n\nexport {VERSION} from './version';\nexport {ClientMessageBroker, ClientMessageBrokerFactory, FnArg, UiArguments} from './web_workers/shared/client_message_broker';\nexport {MessageBus, MessageBusSink, MessageBusSource} from './web_workers/shared/message_bus';\nexport {SerializerTypes} from './web_workers/shared/serializer';\nexport {ReceivedMessage, ServiceMessageBroker, ServiceMessageBrokerFactory} from './web_workers/shared/service_message_broker';\nexport {WORKER_UI_LOCATION_PROVIDERS} from './web_workers/ui/location_providers';\nexport {WORKER_APP_LOCATION_PROVIDERS} from './web_workers/worker/location_providers';\nexport {WorkerAppModule, platformWorkerApp} from './worker_app';\nexport {platformWorkerUi} from './worker_render';\n\n/**\n * Bootstraps the worker ui.\n *\n * @experimental\n */\nexport function bootstrapWorkerUi(\n    workerScriptUri: string, customProviders: StaticProvider[] = []): Promise<PlatformRef> {\n  // For now, just creates the worker ui platform...\n  const platform = platformWorkerUi([\n    {provide: WORKER_SCRIPT, useValue: workerScriptUri},\n    ...customProviders,\n  ]);\n\n  return Promise.resolve(platform);\n}\n"]}